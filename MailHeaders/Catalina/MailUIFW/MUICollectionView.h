//
//     Generated by class-dump 3.5b1 (64 bit) (Debug version compiled Dec  3 2019 19:59:57).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <AppKit/NSView.h>

#import <MailUIFW/NSScrollViewDelegate-Protocol.h>

@class MUICollectionHeightStorage, NSIndexSet, NSMutableArray, NSMutableIndexSet, NSMutableSet, NSString;
@protocol MUICollectionViewDelegate;

@interface MUICollectionView : NSView <NSScrollViewDelegate>
{
    NSMutableArray *_activeCellViews;	// 112 = 0x70
    NSMutableSet *_spareCellViews;	// 120 = 0x78
    NSMutableIndexSet *_faultedIndexes;	// 128 = 0x80
    NSMutableIndexSet *_lockedIndexes;	// 136 = 0x88
    NSMutableIndexSet *_selectionIndexes;	// 144 = 0x90
    unsigned long long _focusedIndex;	// 152 = 0x98
    BOOL _emphasized;	// 160 = 0xa0
    BOOL _inScroll;	// 161 = 0xa1
    BOOL _adjustHeightForPinning;	// 162 = 0xa2
    BOOL _adjustScrollForPinning;	// 163 = 0xa3
    id <MUICollectionViewDelegate> _delegate;	// 168 = 0xa8
    MUICollectionHeightStorage *_heightStorage;	// 176 = 0xb0
    unsigned long long _pinnedIndex;	// 184 = 0xb8
    unsigned long long _pinnedCellEdge;	// 192 = 0xc0
    unsigned long long _pinnedEdge;	// 200 = 0xc8
    double _pinnedOffset;	// 208 = 0xd0
    double _pinnedHeightAdjustment;	// 216 = 0xd8
}

+ (id)keyPathsForValuesAffectingNumberOfCells;	// IMP=0x0000000000017bbe
+ (BOOL)requiresConstraintBasedLayout;	// IMP=0x0000000000002ed7
@property(nonatomic) BOOL adjustScrollForPinning; // @synthesize adjustScrollForPinning=_adjustScrollForPinning;
@property(nonatomic) BOOL adjustHeightForPinning; // @synthesize adjustHeightForPinning=_adjustHeightForPinning;
@property(nonatomic) double pinnedHeightAdjustment; // @synthesize pinnedHeightAdjustment=_pinnedHeightAdjustment;
@property(nonatomic) double pinnedOffset; // @synthesize pinnedOffset=_pinnedOffset;
@property(nonatomic) unsigned long long pinnedEdge; // @synthesize pinnedEdge=_pinnedEdge;
@property(nonatomic) unsigned long long pinnedCellEdge; // @synthesize pinnedCellEdge=_pinnedCellEdge;
@property(nonatomic) unsigned long long pinnedIndex; // @synthesize pinnedIndex=_pinnedIndex;
@property(readonly, nonatomic) MUICollectionHeightStorage *heightStorage; // @synthesize heightStorage=_heightStorage;
@property(nonatomic) BOOL inScroll; // @synthesize inScroll=_inScroll;
@property(nonatomic) __weak id <MUICollectionViewDelegate> delegate; // @synthesize delegate=_delegate;
// - (void).cxx_destruct;	// IMP=0x000000000000a4cd
- (BOOL)_scrollToNextCell:(id)arg1 contiguously:(BOOL)arg2;	// IMP=0x0000000000019a68
- (BOOL)_scrollToPreviousCell:(id)arg1 contiguously:(BOOL)arg2;	// IMP=0x000000000001960e
- (void)scrollPageDown:(id)arg1;	// IMP=0x00000000000194b0
- (void)scrollPageUp:(id)arg1;	// IMP=0x000000000001934b
- (void)scrollToEndOfDocument:(id)arg1;	// IMP=0x000000000001929b
- (void)scrollToBeginningOfDocument:(id)arg1;	// IMP=0x00000000000191ce
- (void)moveDown:(id)arg1;	// IMP=0x0000000000019198
- (void)moveUp:(id)arg1;	// IMP=0x0000000000019162
- (void)moveLeft:(id)arg1;	// IMP=0x000000000001914e
- (void)moveRight:(id)arg1;	// IMP=0x000000000001913a
- (id)supplementalTargetForAction:(SEL)arg1 sender:(id)arg2;	// IMP=0x000000000000a3d4
- (void)keyDown:(id)arg1;	// IMP=0x0000000000018f9e
- (BOOL)_hasFirstResponder;	// IMP=0x0000000000018eed
- (BOOL)performKeyEquivalent:(id)arg1;	// IMP=0x0000000000009df3
- (void)scrollToCellAtIndex:(unsigned long long)arg1 constrainScroll:(BOOL)arg2;	// IMP=0x0000000000005371
- (void)scrollPoint:(struct CGPoint)arg1;	// IMP=0x0000000000018e81
- (void)_scrollEdge:(unsigned long long)arg1 to:(CDUnknownBlockType)arg2;	// IMP=0x0000000000018c43
- (id)enclosingScrollView;	// IMP=0x0000000000003b7d
- (void)didEndScrollInScrollView:(id)arg1;	// IMP=0x0000000000008b18
- (void)didScrollInScrollView:(id)arg1;	// IMP=0x000000000000a063
- (void)didBeginScrollInScrollView:(id)arg1;	// IMP=0x0000000000004a34
- (void)_scrollViewDidScroll:(id)arg1;	// IMP=0x000000000000421a
- (void)_updateGeometryIfNeeded;	// IMP=0x0000000000003f28
- (void)_updateConstraintsForCellAtIndex:(unsigned long long)arg1;	// IMP=0x0000000000007b58
- (void)setFrameSize:(struct CGSize)arg1;	// IMP=0x00000000000029fd
- (void)setFrameOrigin:(struct CGPoint)arg1;	// IMP=0x0000000000002952
- (void)layout;	// IMP=0x0000000000003c09
- (void)updateConstraints;	// IMP=0x000000000000352a
- (void)noteHeightOfCellAtIndex:(unsigned long long)arg1;	// IMP=0x000000000000850e
- (void)_updateSelectionIfNeeded;	// IMP=0x00000000000032b7
- (void)_updateEmphasisIfNeeded;	// IMP=0x00000000000031bd
- (void)deselectCellsAtIndexes:(id)arg1;	// IMP=0x0000000000018b90
- (void)selectCellsAtIndexes:(id)arg1 byExtendingSelection:(BOOL)arg2;	// IMP=0x0000000000018b0b
- (void)mouseUp:(id)arg1;	// IMP=0x0000000000018885
- (struct CGRect)adjustScroll:(struct CGRect)arg1;	// IMP=0x00000000000035a4
- (struct CGRect)_adjustRectForPinning:(struct CGRect)arg1;	// IMP=0x00000000000039c2
- (void)_pinToCellAtIndex:(unsigned long long)arg1 cellEdge:(unsigned long long)arg2 edge:(unsigned long long)arg3 offset:(double)arg4;	// IMP=0x00000000000056c4
- (void)pinToCellAtIndex:(unsigned long long)arg1 cellEdge:(unsigned long long)arg2 edge:(unsigned long long)arg3;	// IMP=0x0000000000018602
- (void)_pinTo:(struct CGRect)arg1 edge:(unsigned long long)arg2;	// IMP=0x000000000000a0dd
- (void)enumerateCellViewsWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x0000000000005110
- (void)enumerateCellViewsUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000025a0
- (unsigned long long)indexForView:(id)arg1;	// IMP=0x000000000000794b
- (unsigned long long)indexForResponder:(id)arg1;	// IMP=0x0000000000003456
- (id)cellViewAtIndex:(unsigned long long)arg1;	// IMP=0x0000000000007abb
- (struct CGRect)rectForCellAtIndex:(unsigned long long)arg1;	// IMP=0x0000000000009423
- (struct _NSRange)rangeOfCellsInRect:(struct CGRect)arg1;	// IMP=0x0000000000003c9d
- (unsigned long long)_indexOfCellView:(id)arg1;	// IMP=0x0000000000007a1e
- (void)prepareContentInRect:(struct CGRect)arg1;	// IMP=0x00000000000043d3
- (id)_claimUnusedCell;	// IMP=0x0000000000018591
- (id)reusableCellViewWithIdentifier:(id)arg1;	// IMP=0x00000000000181f8
- (void)_faultCellsAtIndexesInRange:(struct _NSRange)arg1;	// IMP=0x0000000000004527
- (void)updateVisibleCells;	// IMP=0x00000000000181a7
- (void)unlockCellsAtIndexes:(id)arg1;	// IMP=0x0000000000018139
- (void)unlockCellsAtIndexesInRange:(struct _NSRange)arg1;	// IMP=0x0000000000008e1a
- (void)unlockCellAtIndex:(unsigned long long)arg1;	// IMP=0x0000000000008e03
- (void)lockCellsAtIndexes:(id)arg1;	// IMP=0x00000000000180c9
- (void)lockCellsAtIndexesInRange:(struct _NSRange)arg1;	// IMP=0x0000000000008ca6
- (void)lockCellAtIndex:(unsigned long long)arg1;	// IMP=0x0000000000008c8f
- (void)removeAllCells;	// IMP=0x000000000000a498
- (void)removeCellsAtIndexes:(id)arg1;	// IMP=0x0000000000005319
- (void)removeCellsAtIndexesInRange:(struct _NSRange)arg1;	// IMP=0x000000000000967b
- (void)removeCellAtIndex:(unsigned long long)arg1;	// IMP=0x00000000000180b0
- (void)moveCellAtIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;	// IMP=0x0000000000017cc2
- (void)insertCellsAtIndexes:(id)arg1;	// IMP=0x0000000000017c42
- (void)insertCellsAtIndexesInRange:(struct _NSRange)arg1;	// IMP=0x0000000000004b96
- (void)insertCellAtIndex:(unsigned long long)arg1;	// IMP=0x0000000000004b7f
- (void)_updateCellIndexes;	// IMP=0x0000000000005142
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x00000000000030e4
- (void)viewDidMoveToWindow;	// IMP=0x0000000000002fe5
- (void)viewWillMoveToWindow:(id)arg1;	// IMP=0x0000000000002ee4
- (void)viewDidMoveToSuperview;	// IMP=0x000000000000279b
- (void)viewWillMoveToSuperview:(id)arg1;	// IMP=0x00000000000025e5
@property(readonly, nonatomic) struct _NSRange visibleRange;
@property(copy, nonatomic) NSIndexSet *selectionIndexes;
@property(readonly, nonatomic) unsigned long long numberOfCells;
@property(readonly, nonatomic) unsigned long long firstResponderIndex;
@property(nonatomic) unsigned long long focusedIndex;
@property(nonatomic) BOOL emphasized;
@property(nonatomic) struct NSEdgeInsets margins;
@property(nonatomic) struct CGSize cellSpacing;
- (BOOL)isFlipped;	// IMP=0x0000000000002945
- (BOOL)acceptsFirstResponder;	// IMP=0x0000000000009de6
- (void)_muiCollectionViewCommonInit;	// IMP=0x0000000000002102
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x00000000000020a3
- (id)initWithCoder:(id)arg1;	// IMP=0x0000000000017a24

// Remaining properties
@property(setter=_setWantsPageAlignedHorizontalAxis:) BOOL _wantsPageAlignedHorizontalAxis;
@property(setter=_setWantsPageAlignedVerticalAxis:) BOOL _wantsPageAlignedVerticalAxis;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

