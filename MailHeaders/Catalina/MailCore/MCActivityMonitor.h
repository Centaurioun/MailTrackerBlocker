//
//     Generated by class-dump 3.5b1 (64 bit) (Debug version compiled Dec  3 2019 19:59:57).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <MailCore/EFCancelable-Protocol.h>
#import <MailCore/NSMachPortDelegate-Protocol.h>

@class NSArray, NSError, NSInvocation, NSMachPort, NSMutableSet, NSString;
@protocol MCActivityTarget;

@interface MCActivityMonitor : NSObject <NSMachPortDelegate, EFCancelable>
{
    NSString *_taskName;	// 8 = 0x8
    NSString *_statusMessage;	// 16 = 0x10
    NSString *_descriptionString;	// 24 = 0x18
    NSMutableSet *_subMonitors;	// 32 = 0x20
    NSMutableSet *_associatedCancelables;	// 40 = 0x28
    NSMachPort *_cancelPort;	// 48 = 0x30
    id <MCActivityTarget> _target;	// 56 = 0x38
    double _doneValue;	// 64 = 0x40
    double _previousDoneness;	// 72 = 0x48
    double _itemValue;	// 80 = 0x50
    double _itemMaxValue;	// 88 = 0x58
    double _startTime;	// 96 = 0x60
    double _itemLastNotifiedTime;	// 104 = 0x68
    double _percentDone;	// 112 = 0x70
    long long _shouldUnifyDoneness;	// 120 = 0x78
    long long _currentProgressStage;	// 128 = 0x80
    long long _numberOfProgressStages;	// 136 = 0x88
    long long _key;	// 144 = 0x90
    unsigned long long _itemsDone;	// 152 = 0x98
    unsigned long long _itemsTotal;	// 160 = 0xa0
    unsigned long long _itemFudgeFactor;	// 168 = 0xa8
    long long _activityType;	// 176 = 0xb0
    BOOL _canCancel;	// 184 = 0xb8
    BOOL _shouldCancel;	// 185 = 0xb9
    BOOL _isActive;	// 186 = 0xba
    BOOL _isProgressing;	// 187 = 0xbb
    unsigned char _priority;	// 188 = 0xbc
    BOOL _shouldPromptUserOnTermination;	// 189 = 0xbd
    NSInvocation *_cancelInvocation;	// 192 = 0xc0
    NSString *_itemDescription;	// 200 = 0xc8
    double _itemMinValue;	// 208 = 0xd0
    NSError *_error;	// 216 = 0xd8
}

+ (BOOL)automaticallyNotifiesObserversOfIsProgressing;	// IMP=0x0000000000023464
+ (id)currentMonitor;	// IMP=0x0000000000005e3b
+ (id)currentMonitorIfExists;	// IMP=0x0000000000011f5a
+ (void)setCurrentMonitor:(id)arg1;	// IMP=0x0000000000018f20
+ (BOOL)automaticallyNotifiesObserversOfCanBeCancelled;	// IMP=0x0000000000039b23
+ (BOOL)automaticallyNotifiesObserversOfPercentDone;	// IMP=0x000000000003991f
+ (BOOL)automaticallyNotifiesObserversOfStatusMessage;	// IMP=0x0000000000039917
+ (double)determinateProgress;	// IMP=0x0000000000022b11
@property BOOL shouldPromptUserOnTermination; // @synthesize shouldPromptUserOnTermination=_shouldPromptUserOnTermination;
@property(retain) NSError *error; // @synthesize error=_error;
@property(nonatomic) double itemMinValue; // @synthesize itemMinValue=_itemMinValue;
@property(copy) NSString *itemDescription; // @synthesize itemDescription=_itemDescription;
@property(nonatomic) unsigned char priority; // @synthesize priority=_priority;
@property(retain) NSInvocation *cancelInvocation; // @synthesize cancelInvocation=_cancelInvocation;
// - (void).cxx_destruct;	// IMP=0x0000000000006e22
- (void)resetActivityType;	// IMP=0x0000000000002fb0
- (void)markCompleted:(BOOL)arg1;	// IMP=0x00000000000041c0
- (void)incrementItemsTotal:(unsigned long long)arg1;	// IMP=0x0000000000039d96
- (void)incrementItemsDone:(unsigned long long)arg1;	// IMP=0x00000000000294f3
- (void)incrementItemValue:(double)arg1;	// IMP=0x0000000000031ddf
@property(nonatomic) unsigned long long itemsTotal;
@property(nonatomic) unsigned long long itemsDone;
@property(nonatomic) double itemValue;
- (void)resetItemValue;	// IMP=0x00000000000030d6
- (void)setItem:(id)arg1;	// IMP=0x0000000000024517
- (void)setItemIndeterminateValue;	// IMP=0x00000000000228af
@property(nonatomic) double itemMaxValue;
@property(nonatomic) BOOL isProgressing;
- (void)setItemFudgeFactor:(unsigned long long)arg1;	// IMP=0x000000000003488e
@property long long activityType;
@property(nonatomic) double doneValue;
- (void)updateDoneValue;	// IMP=0x000000000002299b
@property(copy) NSMachPort *cancelPort;
- (void)setPercentDone:(double)arg1 withKey:(long long)arg2;	// IMP=0x0000000000003f48
- (void)setStatusMessage:(id)arg1 withKey:(long long)arg2;	// IMP=0x0000000000003e69
- (void)setStatusMessage:(id)arg1 percentDone:(double)arg2 withKey:(long long)arg3;	// IMP=0x0000000000003e22
- (void)relinquishExclusiveAccessKey:(long long)arg1;	// IMP=0x000000000002bf3a
- (long long)acquireExclusiveAccessKey;	// IMP=0x000000000001c195
- (void)_cancelAssociatedCancelables;	// IMP=0x0000000000039c59
- (void)removeCancelable:(id)arg1;	// IMP=0x0000000000039bdc
- (void)addCancelable:(id)arg1;	// IMP=0x0000000000039b2b
- (void)cancel;	// IMP=0x000000000002095c
- (void)removeSubMonitor:(id)arg1;	// IMP=0x0000000000013434
- (void)addSubMonitor:(id)arg1;	// IMP=0x0000000000011ff3
@property(nonatomic) BOOL shouldCancel;
@property(nonatomic) BOOL canBeCancelled;
@property(readonly, copy, nonatomic) NSArray *activityTargets;
- (void)setPrimaryTarget:(id)arg1;	// IMP=0x0000000000022661
- (void)removeActivityTarget:(id)arg1;	// IMP=0x000000000002470b
- (void)addActivityTarget:(id)arg1;	// IMP=0x00000000000223e4
@property(retain) id <MCActivityTarget> activityTarget;
@property(copy) NSString *taskName;
@property(readonly, copy) NSString *description;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *taskDescriptionString;
- (id)activityDescription;	// IMP=0x0000000000039927
- (void)beginProgressFor:(long long)arg1;	// IMP=0x000000000001bf88
- (void)setStatusMessage:(id)arg1 percentDone:(double)arg2;	// IMP=0x0000000000003e0e
@property double percentDone;
@property(copy) NSString *statusMessage;
- (void)postActivityFinished;	// IMP=0x0000000000004012
- (void)handlePortMessage:(id)arg1;	// IMP=0x0000000000036b56
- (void)postActivityStarting;	// IMP=0x0000000000003c76
@property(readonly, nonatomic) BOOL isActive;
- (void)dealloc;	// IMP=0x0000000000006cc1
- (id)init;	// IMP=0x0000000000002ecb

// Remaining properties
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

