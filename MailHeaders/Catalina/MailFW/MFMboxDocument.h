//
//     Generated by class-dump 3.5b1 (64 bit) (Debug version compiled Dec  3 2019 19:59:57).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <MailFW/MCMessageDataSource-Protocol.h>

@class NSArray, NSData, NSDateFormatter, NSMutableSet, NSString;
@protocol MCMailAccount, MCMailbox;

@interface MFMboxDocument : NSObject <MCMessageDataSource>
{
    NSMutableSet *_uniqueStrings;	// 8 = 0x8
    NSData *_fromSpace;	// 16 = 0x10
    NSData *_space;	// 24 = 0x18
    NSData *_newline;	// 32 = 0x20
    NSData *_headersSeparator;	// 40 = 0x28
    NSDateFormatter *_ctimeDateFormatter;	// 48 = 0x30
    NSData *_mboxData;	// 56 = 0x38
    NSData *_newlineFromSpace;	// 64 = 0x40
    unsigned long long _fromSpaceStaticLength;	// 72 = 0x48
    NSArray *_messagesToExport;	// 80 = 0x50
    CDStruct_a3227609 _fromSpaceRegularExpression;	// 88 = 0x58
}

+ (BOOL)isValidItem:(id)arg1;	// IMP=0x0000000000171e65
@property(readonly, copy, nonatomic) NSArray *messagesToExport; // @synthesize messagesToExport=_messagesToExport;
@property(readonly, nonatomic) unsigned long long fromSpaceStaticLength; // @synthesize fromSpaceStaticLength=_fromSpaceStaticLength;
@property(readonly, copy, nonatomic) NSData *newlineFromSpace; // @synthesize newlineFromSpace=_newlineFromSpace;
@property(readonly, copy, nonatomic) NSData *mboxData; // @synthesize mboxData=_mboxData;
@property(readonly, nonatomic) CDStruct_a3227609 fromSpaceRegularExpression; // @synthesize fromSpaceRegularExpression=_fromSpaceRegularExpression;
@property(readonly, nonatomic) NSDateFormatter *ctimeDateFormatter; // @synthesize ctimeDateFormatter=_ctimeDateFormatter;
@property(readonly, nonatomic) NSData *headersSeparator; // @synthesize headersSeparator=_headersSeparator;
@property(readonly, copy, nonatomic) NSData *newline; // @synthesize newline=_newline;
@property(readonly, copy, nonatomic) NSData *space; // @synthesize space=_space;
@property(readonly, copy, nonatomic) NSData *fromSpace; // @synthesize fromSpace=_fromSpace;
// - (void).cxx_destruct;	// IMP=0x00000000001748a9
- (id)_escapedMessageDataForMessage:(id)arg1;	// IMP=0x00000000001744e7
- (id)emptyFileForWritingToURL:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000174429
- (BOOL)exportMessagesToURL:(id)arg1 error:(id *)arg2 shouldExport:(id)arg3;	// IMP=0x0000000000173d2c
- (BOOL)exportMessagesToURL:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000173d08
- (id)initWithMessages:(id)arg1;	// IMP=0x0000000000173b50
- (id)uniquedString:(id)arg1;	// IMP=0x0000000000173ac1
- (void)flushAllCaches;	// IMP=0x0000000000173abb
- (void)invalidateMessage:(id)arg1;	// IMP=0x0000000000173ab5
- (void)sendResponseType:(BOOL)arg1 forMeetingMessage:(id)arg2 completionHandler:(id)arg3;	// IMP=0x0000000000173aaf
- (id)routeMessages:(id)arg1 fetchingBodies:(BOOL)arg2 messagesNeedingBodies:(id)arg3;	// IMP=0x0000000000173a9b
- (void)doCompact;	// IMP=0x0000000000173a95
@property(readonly, nonatomic) BOOL canCompact;
- (void)deleteMessages:(id)arg1 moveToTrash:(BOOL)arg2;	// IMP=0x0000000000173a87
- (id)setPersistenceConversationFlags:(unsigned long long)arg1 forMessages:(id)arg2;	// IMP=0x0000000000173a73
- (void)unmuteConversationForMessages:(id)arg1;	// IMP=0x0000000000173a6d
- (void)muteConversationForMessages:(id)arg1;	// IMP=0x0000000000173a67
- (void)saveSnippetsForMessages:(id)arg1;	// IMP=0x0000000000173a61
- (void)setNumberOfAttachments:(unsigned int)arg1 isSigned:(BOOL)arg2 isEncrypted:(BOOL)arg3 forMessage:(id)arg4;	// IMP=0x0000000000173a5b
- (id)attachmentsDirectoryForMessage:(id)arg1 partNumber:(id)arg2;	// IMP=0x0000000000173a53
- (id)attachmentsDirectoryForMessage:(id)arg1;	// IMP=0x0000000000173a4b
- (void)setColor:(id)arg1 highlightTextOnly:(BOOL)arg2 forMessages:(id)arg3;	// IMP=0x0000000000173a45
- (id)setJunkMailLevel:(long long)arg1 forMessages:(id)arg2 trainJunkMailDatabase:(BOOL)arg3 userRecorded:(BOOL)arg4;	// IMP=0x0000000000173a31
- (id)_flagChangeDictionaryForJunkMailLevel:(long long)arg1 forMessages:(id)arg2 userRecorded:(BOOL)arg3 changedMessages:(id)arg4;	// IMP=0x0000000000173a1d
- (void)messageFlagsDidChange:(id)arg1 flags:(id)arg2;	// IMP=0x0000000000173a17
- (void)setFlagWithKey:(id)arg1 state:(BOOL)arg2 forMessages:(id)arg3;	// IMP=0x0000000000173a11
- (void)async_setFlagWithKey:(id)arg1 state:(BOOL)arg2 forMessages:(id)arg3;	// IMP=0x0000000000173a0b
- (id)setFlagsFromDictionary:(id)arg1 forMessages:(id)arg2;	// IMP=0x00000000001739f7
- (void)async_setFlagsFromDictionary:(id)arg1 forMessages:(id)arg2;	// IMP=0x00000000001739f1
- (id)bodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id *)arg2 fetchIfNotAvailable:(BOOL)arg3 allowPartial:(BOOL)arg4;	// IMP=0x0000000000173864
- (id)bodyDataForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2 allowPartial:(BOOL)arg3;	// IMP=0x0000000000173303
- (id)headerDataForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2 allowPartial:(BOOL)arg3;	// IMP=0x0000000000172fc2
- (void)getTopLevelMimePart:(id *)arg1 headers:(id *)arg2 body:(id *)arg3 forMessage:(id)arg4 fetchIfNotAvailable:(BOOL)arg5 updateFlags:(BOOL)arg6 allowPartial:(BOOL)arg7 skipSignatureVerification:(BOOL)arg8;	// IMP=0x0000000000172d0e
- (id)messageForMessageID:(id)arg1;	// IMP=0x0000000000172d06
@property(readonly, nonatomic) id <MCMailbox> mailbox;
@property(readonly, nonatomic) id <MCMailAccount> account;
@property(readonly) BOOL isReadOnly;
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x0000000000172ce0
- (id)_dateFromRange:(struct _NSRange)arg1;	// IMP=0x0000000000172885
- (struct _NSRange)_rangeOfSeparatorLineInRange:(struct _NSRange)arg1;	// IMP=0x000000000017251b
@property(readonly, copy, nonatomic) NSArray *messagesForImporter;
- (id)initWithContentsOfURL:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000171f71
- (void)dealloc;	// IMP=0x0000000000171e2b
- (void)_mfMboxDocumentCommonInit;	// IMP=0x0000000000171c97
- (id)init;	// IMP=0x0000000000171bc8

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, copy, nonatomic) NSString *displayName;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

