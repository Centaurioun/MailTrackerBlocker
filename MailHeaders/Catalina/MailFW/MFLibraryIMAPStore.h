//
//     Generated by class-dump 3.5b1 (64 bit) (Debug version compiled Dec  3 2019 19:59:57).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <MailFW/MFRemoteStore.h>

#import <MailFW/IMAPMailboxDelegate-Protocol.h>
#import <MailFW/IMAPMessageDataSource-Protocol.h>

@class EDMessageChangeManager, EDServerMessagePersistence, IMAPCommandPipeline, IMAPDownloadCache, IMAPMailbox, MFIMAPAccount, MFMailbox, NSArray, NSDate, NSMutableArray, NSString;

@interface MFLibraryIMAPStore : MFRemoteStore <IMAPMailboxDelegate, IMAPMessageDataSource>
{
    IMAPMailbox *_IMAPMailbox;	// 16 = 0x10
    IMAPDownloadCache *_downloadCache;	// 24 = 0x18
    IMAPCommandPipeline *_fetchPipeline;	// 32 = 0x20
    NSMutableArray *_recentlyDeletedMessageIDs;	// 40 = 0x28
    id _uidNextStatusLock;	// 48 = 0x30
    unsigned long long _numberOfAppendsOutstanding;	// 56 = 0x38
    id _appendCountLock;	// 64 = 0x40
    BOOL _supportsModificationSequences;	// 72 = 0x48
    BOOL _isOpenedByUser;	// 73 = 0x49
    BOOL _supportsCustomPermanentFlags;	// 74 = 0x4a
    unsigned long long _totalCount;	// 80 = 0x50
    NSString *_mailboxName;	// 88 = 0x58
}

+ (id)largeDeleteLog;	// IMP=0x000000000010d940
@property(copy) NSString *mailboxName; // @synthesize mailboxName=_mailboxName;
@property(nonatomic) BOOL supportsCustomPermanentFlags; // @synthesize supportsCustomPermanentFlags=_supportsCustomPermanentFlags;
@property BOOL isOpenedByUser; // @synthesize isOpenedByUser=_isOpenedByUser;
@property BOOL supportsModificationSequences; // @synthesize supportsModificationSequences=_supportsModificationSequences;
@property unsigned long long totalCount; // @synthesize totalCount=_totalCount;
// - (void).cxx_destruct;	// IMP=0x000000000011549e
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00000000001153e3
@property(readonly, copy, nonatomic) NSString *stateStringForDiagnostics;
- (void)updateUidValidityFromMailbox:(id)arg1;	// IMP=0x000000000011516f
- (void)updateComputedHighestModificationSequence:(unsigned long long)arg1 forMailbox:(id)arg2;	// IMP=0x00000000001150ad
- (unsigned long long)computedHighestModificationSequenceForMailbox:(id)arg1;	// IMP=0x0000000000114fee
- (unsigned long long)allegedHighestModificationSequenceForMailbox:(id)arg1;	// IMP=0x0000000000114f2f
@property(retain) NSDate *lastSyncDate;
@property(readonly, nonatomic) MFIMAPAccount *account;
@property(readonly, copy, nonatomic) NSArray *messagesBeingRouted;
@property(readonly, nonatomic) IMAPDownloadCache *downloadCache;
@property(readonly, nonatomic) IMAPCommandPipeline *fetchPipeline;
- (void)_setBackgroundColorForMessages:(id)arg1 textColorForMessages:(id)arg2;	// IMP=0x00000000001147d2
- (void)messagesWereAdded:(id)arg1 secondaryMessages:(id)arg2 duringOpen:(BOOL)arg3;	// IMP=0x0000000000114594
- (BOOL)isSortedAscending;	// IMP=0x000000000011458c
- (id)sortOrder;	// IMP=0x0000000000114578
- (void)writeUpdatedMessageDataToDisk;	// IMP=0x0000000000114572
- (id)_deletedMessages;	// IMP=0x00000000001144ff
- (id)_copyOfAllMessagesSortedByUidWithOptions:(unsigned int)arg1;	// IMP=0x000000000011440a
- (id)copyOfOldCachedMessagesContentsForUid:(unsigned int)arg1;	// IMP=0x000000000011430d
- (BOOL)hasValidCacheFileForUid:(unsigned int)arg1;	// IMP=0x000000000011419b
- (BOOL)hasValidCacheFileForMessage:(id)arg1;	// IMP=0x0000000000114168
- (id)_preferredOrderForFetchingMessageBodies:(id)arg1;	// IMP=0x0000000000113e31
- (void)forceResync;	// IMP=0x0000000000113d47
- (void)fixMessagesAndResetIMAPMessages;	// IMP=0x00000000001137c1
- (BOOL)mailboxHasInconsistencies;	// IMP=0x00000000001136e8
- (void)setComputedHighestModificationSequence:(unsigned long long)arg1;	// IMP=0x0000000000113645
@property(nonatomic) unsigned long long allegedHighestModificationSequence;
- (void)setUidNextStatusIfNeeded:(unsigned int)arg1;	// IMP=0x00000000001133dd
@property(nonatomic) unsigned int uidNextStatus;
@property(nonatomic) unsigned int uidValidityStatus;
- (id)_uidIndexSetForMessages:(id)arg1;	// IMP=0x0000000000112fa0
@property(readonly) EDMessageChangeManager *messageChangeManager;
@property(readonly) EDServerMessagePersistence *serverMessagePersistence;
- (id)messagesWithRemoteIDs:(id)arg1;	// IMP=0x0000000000112daa
@property(readonly, copy, nonatomic) NSArray *duplicateRemoteIDs;
- (id)copyOfAllMessagesWithOptions:(unsigned int)arg1;	// IMP=0x0000000000112c7d
- (id)copyIncompleteMessages;	// IMP=0x0000000000112b6a
@property(readonly, nonatomic) BOOL canSetMessageColors;
- (void)setBackgroundColorForMessages:(id)arg1 textColorForMessages:(id)arg2;	// IMP=0x0000000000112ad5
- (id)messageWithRemoteID:(id)arg1 inRemoteMailbox:(id)arg2;	// IMP=0x0000000000112a32
- (id)messagesForMailbox:(id)arg1 where:(id)arg2 sortedBy:(id)arg3 ascending:(BOOL)arg4 options:(unsigned int)arg5;	// IMP=0x0000000000112964
- (void)compactMailbox:(id)arg1;	// IMP=0x00000000001128ee
@property(readonly, nonatomic) unsigned long long serverMessageCount;
- (unsigned long long)totalCountAndUnseenCount:(unsigned long long *)arg1 adjustedUnreadCount:(unsigned long long *)arg2;	// IMP=0x0000000000112818
@property(readonly, nonatomic) unsigned long long totalCountOfMessages;
@property(readonly, nonatomic) unsigned int maximumUID;
- (id)messageForMessageID:(id)arg1;	// IMP=0x0000000000112724
- (id)colorForMessage:(id)arg1;	// IMP=0x0000000000112683
- (id)_fetchHeaderDataForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2 allowPartial:(BOOL)arg3;	// IMP=0x0000000000112441
- (id)_fetchBodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id *)arg2 fetchIfNotAvailable:(BOOL)arg3 allowPartial:(BOOL)arg4 serverInterface:(id)arg5;	// IMP=0x00000000001120ea
- (id)_fetchBodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id *)arg2 fetchIfNotAvailable:(BOOL)arg3 allowPartial:(BOOL)arg4;	// IMP=0x0000000000111c3f
- (id)_waitForDataFromDownload:(id)arg1 uid:(unsigned int)arg2;	// IMP=0x00000000001111d9
- (id)fetchAndCacheBodyDataForMessages:(id)arg1 withServerInterface:(id)arg2;	// IMP=0x00000000001104de
- (id)_dataForMessage:(id)arg1 readHeadersOnly:(BOOL)arg2;	// IMP=0x000000000010ff2c
- (id)messagesWithRowIDs:(id)arg1;	// IMP=0x000000000010fd9a
- (id)messageWithLibraryID:(long long)arg1 options:(unsigned int)arg2;	// IMP=0x000000000010fcc7
- (id)messageWithDefaultLoadOptionsAndRowID:(long long)arg1;	// IMP=0x000000000010fc7b
- (void)undeleteMessagesWithDetails:(id)arg1;	// IMP=0x000000000010f968
- (void)deleteMessages:(id)arg1 moveToTrash:(BOOL)arg2;	// IMP=0x000000000010f71c
- (BOOL)_isAppleOriCloudAccount;	// IMP=0x000000000010f680
- (id)flagChangeFromLocalFlags:(id)arg1 toServerFlags:(id)arg2;	// IMP=0x000000000010f284
- (BOOL)allowsOverwrite;	// IMP=0x000000000010f27c
- (BOOL)allowsAppend;	// IMP=0x000000000010f1f3
- (BOOL)shouldSendUserNotificationForMessage:(id)arg1;	// IMP=0x000000000010f0f7
- (void)deleteLastMessageWithHeaders:(id)arg1 compactWhenDone:(BOOL)arg2;	// IMP=0x000000000010ef5d
- (void)deleteMessagesOlderThanNumberOfDays:(long long)arg1 compact:(BOOL)arg2;	// IMP=0x000000000010eed1
- (void)doCompact;	// IMP=0x000000000010edbc
@property(readonly, nonatomic) BOOL canCompact;
@property(readonly, nonatomic) MFMailbox *mailbox;
- (BOOL)canRebuild;	// IMP=0x000000000010eca0
- (void)doRoutineCleanup;	// IMP=0x000000000010ea4b
- (void)fetchSynchronouslyForKnownChanges;	// IMP=0x000000000010ea34
- (void)fetchSynchronously;	// IMP=0x000000000010ea20
- (void)checkNewMail;	// IMP=0x000000000010ea09
- (void)_fetchForCheckingNewMail:(BOOL)arg1;	// IMP=0x000000000010e983
@property(readonly, nonatomic) BOOL isAllMailMailbox;
@property(readonly, nonatomic) BOOL isInbox;
- (BOOL)shouldCallCompactWhenClosing;	// IMP=0x000000000010e849
- (void)invalidateSyncEngine;	// IMP=0x000000000010e710
- (void)_invalidate;	// IMP=0x000000000010e47a
- (void)asynchronousCopyOfAllMessagesWithOptions:(id)arg1;	// IMP=0x000000000010e3a4
- (void)openSynchronouslyWithoutUserInteraction;	// IMP=0x000000000010e2aa
- (void)openSynchronouslyUpdatingMetadata:(BOOL)arg1;	// IMP=0x000000000010e1ab
- (void)_openSynchronouslyUpdatingMetadata:(BOOL)arg1 withOptions:(unsigned long long)arg2;	// IMP=0x000000000010e016
- (void)openAsynchronously;	// IMP=0x000000000010dfd3
@property(readonly) BOOL isReadOnly;
@property(readonly, nonatomic) unsigned int permanentFlags;
- (BOOL)_isSynchronizing;	// IMP=0x000000000010de83
- (BOOL)_isSynchronized;	// IMP=0x000000000010ddae
- (id)_IMAPMailbox;	// IMP=0x000000000010dd58
- (void)dealloc;	// IMP=0x000000000010dd29
- (id)initWithCriterion:(id)arg1 mailbox:(id)arg2 readOnly:(BOOL)arg3;	// IMP=0x000000000010d99d
- (id)objectSpecifierForMessage:(id)arg1;	// IMP=0x00000000001aa3d6

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, copy, nonatomic) NSString *displayName;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) BOOL isTrash;
@property(readonly, nonatomic) long long mailboxID;
@property(readonly) Class superclass;

@end

