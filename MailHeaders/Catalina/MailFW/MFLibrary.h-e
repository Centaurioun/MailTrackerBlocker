//
//     Generated by class-dump 3.5b1 (64 bit) (Debug version compiled Dec  3 2019 19:59:57).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <MailFW/EDSearchableIndexReasonProvider-Protocol.h>
#import <MailFW/MCActivityTarget-Protocol.h>

@class EDConversationPersistence, EDPersistence, EDPersistenceDatabase, EFLazyCache, MFMailbox, MFMessageChangeManager_macOS, NSArray, NSHashTable, NSMapTable, NSMutableArray, NSMutableDictionary, NSMutableSet, NSOperationQueue, NSSet, NSString, NSTimer;

@interface MFLibrary : NSObject <EDSearchableIndexReasonProvider, MCActivityTarget>
{
    _Atomic _Bool _libraryInitialized;	// 8 = 0x8
    id _libraryLock;	// 16 = 0x10
    NSMapTable *_mailboxRowIDToURLCache;	// 24 = 0x18
    NSMapTable *_mailboxURLToRowIDCache;	// 32 = 0x20
    MFMailbox *_currentMailbox;	// 40 = 0x28
    id _commitTimerLock;	// 48 = 0x30
    NSTimer *_commitTimer;	// 56 = 0x38
    NSMutableSet *_messagesToCommit;	// 64 = 0x40
    NSMutableDictionary *_lastViewedDateForMessageToCommit;	// 72 = 0x48
    id _updateEmlxLock;	// 80 = 0x50
    NSMutableSet *_messagesUpdatingEmlx;	// 88 = 0x58
    NSMutableSet *_messagesToUpdateEmlx;	// 96 = 0x60
    NSMutableDictionary *_mailboxDataDirectoryCache;	// 104 = 0x68
    NSArray *_messageLibraryIDsToUpdateEmlx;	// 112 = 0x70
    BOOL _restoredFromBackingStoreUpdateJournal;	// 120 = 0x78
    BOOL _updateEmlxInProgress;	// 121 = 0x79
    BOOL _logSQLitePerformance;	// 122 = 0x7a
    BOOL _logSQLiteBlockPerformance;	// 123 = 0x7b
    BOOL _logLibraryMainThreadAccess;	// 124 = 0x7c
    BOOL _logBackingStoreJournalUpdates;	// 125 = 0x7d
    BOOL _logSearchCriterion;	// 126 = 0x7e
    BOOL _libraryIsImporting;	// 127 = 0x7f
    unsigned long long _runningIndexOfCurrentMessage;	// 128 = 0x80
    unsigned long long _totalNumberOfMessages;	// 136 = 0x88
    NSMutableSet *_onlineAccounts;	// 144 = 0x90
    BOOL _didTagVersion;	// 152 = 0x98
    NSMutableDictionary *_importAddressRowids;	// 160 = 0xa0
    NSMutableDictionary *_importSubjectRowids;	// 168 = 0xa8
    NSMutableDictionary *_importMailboxRowids;	// 176 = 0xb0
    NSOperationQueue *_writeQueue;	// 184 = 0xb8
    NSOperationQueue *_messageNotificationSerializationQueue;	// 192 = 0xc0
    NSHashTable *_registeredStores;	// 200 = 0xc8
    id _activeMailboxesCacheLock;	// 208 = 0xd0
    BOOL _activeAccountFilterOff;	// 216 = 0xd8
    NSSet *_activeMailboxesCache;	// 224 = 0xe0
    NSSet *_oldActiveMailboxesCache;	// 232 = 0xe8
    BOOL _activeMailboxesCacheIsInvalid;	// 240 = 0xf0
    id _activeMailboxesClauseLock;	// 248 = 0xf8
    NSString *_activeMailboxesClause;	// 256 = 0x100
    id _databaseUUIDStringLock;	// 264 = 0x108
    NSString *_databaseUUIDString;	// 272 = 0x110
    id _myAddressIDsLock;	// 280 = 0x118
    NSString *_myAddressIDsString;	// 288 = 0x120
    NSSet *_myEmailAddresses;	// 296 = 0x128
    EDPersistence *_libraryPersistence;	// 304 = 0x130
    EDPersistenceDatabase *_libraryDatabase;	// 312 = 0x138
    MFMessageChangeManager_macOS *_messageChangeManager;	// 320 = 0x140
    EDConversationPersistence *_conversationPersistence;	// 328 = 0x148
    NSMutableArray *_mostRecentSpotlightQueries;	// 336 = 0x150
    EFLazyCache *_selectClauseCache;	// 344 = 0x158
}

+ (unsigned long long)cleanOldDatabases;	// IMP=0x0000000000104f63
+ (long long)libraryStatusAsReader;	// IMP=0x0000000000104d0c
+ (long long)libraryStatusAsWriter:(id *)arg1;	// IMP=0x0000000000104cf2
+ (long long)_libraryStatusCanWrite:(BOOL)arg1 library:(id *)arg2;	// IMP=0x0000000000104baa
+ (BOOL)_fileExists;	// IMP=0x0000000000104928
+ (long long)threadPriority;	// IMP=0x00000000000e59fd
+ (id)propertyMapper;	// IMP=0x00000000000d8267
+ (BOOL)isSearchableIndexEnabled;	// IMP=0x00000000000d81e3
+ (id)defaultLibrary;	// IMP=0x00000000000d817e
+ (void)loadSearchSettings;	// IMP=0x00000000000d8080
+ (void)initialize;	// IMP=0x00000000000d7dba
+ (id)spotlightLog;	// IMP=0x00000000000d7d5d
+ (id)log;	// IMP=0x00000000000d7d00
@property(retain, nonatomic) EFLazyCache *selectClauseCache; // @synthesize selectClauseCache=_selectClauseCache;
@property(readonly, nonatomic) NSMutableArray *mostRecentSpotlightQueries; // @synthesize mostRecentSpotlightQueries=_mostRecentSpotlightQueries;
@property(readonly, nonatomic) EDConversationPersistence *conversationPersistence; // @synthesize conversationPersistence=_conversationPersistence;
@property(readonly, nonatomic) MFMessageChangeManager_macOS *messageChangeManager; // @synthesize messageChangeManager=_messageChangeManager;
@property(readonly, nonatomic) EDPersistenceDatabase *libraryDatabase; // @synthesize libraryDatabase=_libraryDatabase;
@property(readonly, nonatomic) EDPersistence *libraryPersistence; // @synthesize libraryPersistence=_libraryPersistence;
// - (void).cxx_destruct;	// IMP=0x0000000000109401
@property(readonly, copy, nonatomic) NSSet *currentReasons;
@property(readonly, copy, nonatomic) NSSet *exclusionReasons;
@property(readonly, copy, nonatomic) NSSet *purgeReasons;
@property(readonly, copy, nonatomic) NSSet *dataSourceRefreshReasons;
- (id)_messageForStatement:(id)arg1 loadOptions:(unsigned int)arg2 uniquer:(id)arg3 row:(id)arg4;	// IMP=0x0000000000108414
- (id)_messageForStatement:(id)arg1 loadOptions:(unsigned int)arg2 uniquer:(id)arg3;	// IMP=0x00000000001083b4
- (unsigned long long)numberOfMessagesForAccount:(id)arg1;	// IMP=0x000000000010816c
- (void)performBlockDeferringMessageNotifications:(id)arg1;	// IMP=0x0000000000107f56
- (void)queueConversationFlagsChangedNotification:(id)arg1;	// IMP=0x0000000000107e30
- (void)queueStoreFinishedFirstTimeSyncWithBlock:(id)arg1;	// IMP=0x0000000000107e17
- (void)queueMessagesDeletedBackupManagerNotification:(id)arg1;	// IMP=0x0000000000107cf1
- (void)queueMessagesCompactedNotification:(id)arg1;	// IMP=0x0000000000107a51
- (void)queueMessageGmailLabelsChangedNotificationForMessages:(id)arg1;	// IMP=0x0000000000107984
- (void)_queueMessagesChangedNotificationForMessages:(id)arg1 flags:(id)arg2 oldFlagsByMessage:(id)arg3 updateEmlx:(BOOL)arg4;	// IMP=0x00000000001074e7
- (void)queueMessagesUpdatedNotification:(id)arg1;	// IMP=0x0000000000107247
- (void)queueMessagesAddedNotification:(id)arg1;	// IMP=0x0000000000106fa7
- (void)queueMessagesNotification:(id)arg1 withUserInfo:(id)arg2;	// IMP=0x0000000000106e7e
- (void)registerStoreForUpdates:(id)arg1;	// IMP=0x0000000000106dfb
- (void)_didCommit:(struct sqlite3 *)arg1;	// IMP=0x0000000000106c36
- (id)newUnsignedForQuery:(id)arg1 db:(struct sqlite3 *)arg2;	// IMP=0x0000000000106b53
- (void)tagDatabaseVersionIfNeeded:(id)arg1;	// IMP=0x0000000000106643
- (void)flushCachedDatabases;	// IMP=0x0000000000106529
- (id)sqlListWithArray:(id)arg1;	// IMP=0x0000000000106284
- (id)_mailboxForMailboxID:(long long)arg1 forceCreation:(BOOL)arg2;	// IMP=0x0000000000106219
- (long long)mailboxIDForMailboxURLString:(id)arg1 loadIfNotPresent:(BOOL)arg2;	// IMP=0x0000000000106089
- (long long)mailboxIDForMailbox:(id)arg1 loadIfNotPresent:(BOOL)arg2;	// IMP=0x0000000000105eb3
- (BOOL)addCalendarEvent:(id)arg1 toMessage:(id)arg2;	// IMP=0x0000000000105bd4
- (id)calendarEventForMessageID:(long long)arg1;	// IMP=0x00000000001056ad
- (void)prepareToReImportMessages;	// IMP=0x0000000000105632
- (void)setTotalNumberOfMessages:(unsigned long long)arg1;	// IMP=0x0000000000104f1c
- (unsigned long long)totalNumberOfMessages;	// IMP=0x0000000000104edd
- (unsigned long long)runningIndexOfCurrentMessage;	// IMP=0x0000000000104e9e
- (void)incrementRunningIndexOfCurrentMessage;	// IMP=0x0000000000104e63
- (void)_setCurrentMailbox:(id)arg1;	// IMP=0x0000000000104dd8
- (id)currentMailbox;	// IMP=0x0000000000104d85
@property(getter=isInitialized) BOOL initialized;
- (void)dispose;	// IMP=0x00000000001049d0
- (void)takeAccountsOnlineAllAccounts:(BOOL)arg1;	// IMP=0x0000000000104704
- (void)upgradeMessageDirectoriesIfNeeded;	// IMP=0x00000000001044bc
- (void)_upgradeMessageDirectoriesSynchronously;	// IMP=0x0000000000103939
- (id)_messagesDirectoryPathsFromDataPath:(id)arg1;	// IMP=0x0000000000103544
- (id)_versionedMessagesDirectoryPathsForMailboxPath:(id)arg1 uuidDirectoryPaths:(id *)arg2;	// IMP=0x0000000000102fa3
- (id)importMailboxRowIDs;	// IMP=0x0000000000102f92
- (id)importSubjectRowIDs;	// IMP=0x0000000000102f81
- (id)importAddressRowIDs;	// IMP=0x0000000000102f70
- (BOOL)importMessagesFromEnabledAccounts;	// IMP=0x0000000000100ff5
- (void)setLibraryIsImporting:(BOOL)arg1;	// IMP=0x0000000000100fb1
- (BOOL)libraryIsImporting;	// IMP=0x0000000000100f74
- (BOOL)_importMessageBatch:(id)arg1 fromMailbox:(id)arg2 store:(id)arg3 seenRemoteIDs:(id)arg4;	// IMP=0x00000000001005de
- (BOOL)_importMailbox:(id)arg1;	// IMP=0x00000000000ffbcd
- (BOOL)rebuildMailbox:(id)arg1;	// IMP=0x00000000000febea
- (id)_mailboxPredictionQueryWithWhereClause:(id)arg1 limitedToRecents:(BOOL)arg2;	// IMP=0x00000000000feacf
- (id)groupedMessagesCountByMailboxMatchingQuery:(unsigned long long)arg1 variable:(id)arg2;	// IMP=0x00000000000fe01e
- (void)setLastSpotlightCheckDate:(id)arg1 forMessageIDs:(id)arg2;	// IMP=0x00000000000fdb22
- (id)messagesInMailbox:(id)arg1 sinceLastSpotlightCheck:(id)arg2;	// IMP=0x00000000000fd93d
- (id)_searchableItemWithUpdateForLibraryID:(long long)arg1 messageIDHashString:(id)arg2;	// IMP=0x00000000000fd761
- (id)messageIDHashStringForLegacyMessageIDHashString:(id)arg1;	// IMP=0x00000000000fd652
- (id)updateMessageIDHashFormatIfNecessaryForLibraryIDsToMessageIDs:(id)arg1;	// IMP=0x00000000000fd1f2
- (id)criterionExpressionStringForStartLibraryID:(long long)arg1 count:(unsigned long long)arg2;	// IMP=0x00000000000fcfce
- (BOOL)boolForCriterion:(id)arg1;	// IMP=0x00000000000fcf0f
- (unsigned long long)countForCriterion:(id)arg1;	// IMP=0x00000000000fce76
- (id)_queryForCountCriterion:(id)arg1;	// IMP=0x00000000000fcd6c
- (id)messagesMatchingCriterion:(id)arg1 options:(unsigned int)arg2 searchType:(long long)arg3;	// IMP=0x00000000000fcc59
- (id)_spotlightCallbackDispatchQueue;	// IMP=0x00000000000fcc48
- (void)sendMessagesMatchingCriterion:(id)arg1 to:(id)arg2 options:(unsigned int)arg3 searchType:(long long)arg4 queryLabel:(id)arg5 async:(BOOL)arg6;	// IMP=0x00000000000facc0
- (id)copyMostRecentSpotlightQueries;	// IMP=0x00000000000fac3b
- (void)_logQuery:(struct __MDQuery *)arg1 allowPII:(BOOL)arg2;	// IMP=0x00000000000faac3
- (id)allMailboxesSearchableIndexQueryWithExpression:(id)arg1 builder:(id)arg2 forUnreadCount:(BOOL)arg3 withMailboxExclusions:(BOOL)arg4 includeAttachmentCriterion:(BOOL)arg5;	// IMP=0x00000000000faa0a
- (id)allMailboxesSearchableIndexQueryExpressionWithExpression:(id)arg1 forUnreadCount:(BOOL)arg2 withMailboxExclusions:(BOOL)arg3 includeAttachmentCriterion:(BOOL)arg4;	// IMP=0x00000000000fa8c4
- (struct __MDQuery *)createAllMailboxesSpotlightQueryWithQueryString:(id)arg1 queryLabel:(id)arg2 forUnreadCount:(BOOL)arg3 withMailboxExclusions:(BOOL)arg4 includeWhereFromsCriterion:(BOOL)arg5;	// IMP=0x00000000000fa749
- (id)_mailboxURLStringsForCriterion:(id)arg1;	// IMP=0x00000000000fa55c
- (id)_mailboxURLStringForMailboxCriterion:(id)arg1;	// IMP=0x00000000000fa46a
- (id)_activeAccountIdentifiers;	// IMP=0x00000000000fa40c
- (id)_copyScopeDirectories:(id)arg1;	// IMP=0x00000000000fa3d8
- (id)_copyScopeDirectoriesForCriterion:(id)arg1 allCriteriaAreMailbox:(char *)arg2;	// IMP=0x00000000000fa31b
- (id)_scopeIdentifiersForCriterion:(id)arg1 criterionIdentifierMapper:(id)arg2 allCriteriaAreMailbox:(char *)arg3;	// IMP=0x00000000000fa011
- (id)_scopeDirectoryForMailboxCriterion:(id)arg1;	// IMP=0x00000000000f9e75
- (id)relatedMessagesForWhereFromItems:(id)arg1 excludedMailboxes:(id)arg2;	// IMP=0x00000000000f906f
- (id)queryForCriterion:(id)arg1 options:(unsigned int)arg2;	// IMP=0x00000000000f9047
- (id)queryForCriterion:(id)arg1 options:(unsigned int)arg2 baseTable:(unsigned long long)arg3 isSubquery:(BOOL)arg4 fixUpCriterion:(BOOL)arg5;	// IMP=0x00000000000f8e25
- (void)markMessageAsViewed:(id)arg1 viewedDate:(id)arg2;	// IMP=0x00000000000f8c16
- (id)attachmentURLForMessage:(id)arg1 partNumber:(id)arg2 attachmentFilename:(id)arg3 isMailDropImageArchive:(BOOL)arg4 isMailDropImageThumbnail:(BOOL)arg5;	// IMP=0x00000000000f8a52
- (BOOL)hasCacheFileForMessage:(id)arg1 part:(id)arg2;	// IMP=0x00000000000f88f9
- (BOOL)hasCacheFileForMessage:(id)arg1;	// IMP=0x00000000000f88a7
- (id)incompleteMessagesForMailbox:(id)arg1 sinceDate:(id)arg2;	// IMP=0x00000000000f879e
- (id)_messageDataAtPath:(id)arg1;	// IMP=0x00000000000f86e1
- (BOOL)isMessageContentLocallyAvailable:(id)arg1;	// IMP=0x00000000000f86cc
- (id)fullMessageDataForMessage:(id)arg1;	// IMP=0x00000000000f866d
- (id)messageDataForMessage:(id)arg1;	// IMP=0x00000000000f858b
- (id)fullBodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id *)arg2;	// IMP=0x00000000000f8527
- (id)bodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id *)arg2;	// IMP=0x00000000000f8439
- (id)headerDataForMessageWithPath:(id)arg1;	// IMP=0x00000000000f8232
- (id)headerDataForLibraryID:(long long)arg1 mailboxID:(long long)arg2;	// IMP=0x00000000000f8111
- (id)_bodyDataAtPath:(id)arg1 headerData:(id *)arg2;	// IMP=0x00000000000f7eaa
- (id)mimeMessageDataSnippingPartsData:(id)arg1 mimePartBlock:(id)arg2;	// IMP=0x00000000000f799d
- (void)writeAttachmentsIfNeededForMessage:(id)arg1;	// IMP=0x00000000000f7329
- (void)appendMimeData:(id)arg1 forMessage:(id)arg2 partNumber:(id)arg3;	// IMP=0x00000000000f6ea4
- (BOOL)_writeAttachmentWithDecodedData:(id)arg1 forMessage:(id)arg2 mimePart:(id)arg3 headers:(id)arg4;	// IMP=0x00000000000f6a45
- (void)setData:(id)arg1 forMessage:(id)arg2 isPartial:(BOOL)arg3 hasCompleteText:(BOOL)arg4;	// IMP=0x00000000000f5d0c
- (id)snipAttachmentMimeForFileIfNeeded:(id)arg1 originalMessageData:(id)arg2 forMessage:(id)arg3;	// IMP=0x00000000000f4ff4
- (id)existingDataFileForMessage:(id)arg1;	// IMP=0x00000000000f4edb
- (id)messageWithDataPath:(id)arg1;	// IMP=0x00000000000f4ceb
- (id)_dataPathForMessageWithLibraryID:(long long)arg1 mailboxID:(long long)arg2 type:(long long)arg3;	// IMP=0x00000000000f4c75
- (id)_dataPathForMessage:(id)arg1 type:(long long)arg2;	// IMP=0x00000000000f4bb6
- (id)dataURLForMessage:(id)arg1 partNumber:(id)arg2;	// IMP=0x00000000000f4a7d
- (id)dataPathForMessage:(id)arg1;	// IMP=0x00000000000f4a69
- (id)_dataPathForMessageWithLibraryID:(long long)arg1 mailboxID:(long long)arg2 withFilename:(id)arg3;	// IMP=0x00000000000f496c
- (id)dataPathForLibraryID:(long long)arg1 pathToMailbox:(id)arg2 type:(long long)arg3;	// IMP=0x00000000000f4753
- (id)dataPathForLibraryID:(long long)arg1 pathToMailbox:(id)arg2 fileExists:(char *)arg3;	// IMP=0x00000000000f4642
- (void)fileURLForAttachmentID:(id)arg1 messageID:(id)arg2 name:(id)arg3 result:(id)arg4;	// IMP=0x00000000000f4521
- (id)attachmentsDirectoryForMessage:(id)arg1 partNumber:(id)arg2;	// IMP=0x00000000000f4469
- (id)attachmentsDirectoryForMessage:(id)arg1;	// IMP=0x00000000000f4247
- (id)filenameForLibraryID:(long long)arg1 type:(long long)arg2;	// IMP=0x00000000000f41db
- (id)filenameForLibraryID:(long long)arg1 part:(id)arg2;	// IMP=0x00000000000f41a8
- (id)intermediateDirectoryForLibraryID:(long long)arg1 forAttachments:(BOOL)arg2;	// IMP=0x00000000000f4135
- (id)versionedIntermediateDirectoryForLibraryID:(long long)arg1 forAttachments:(BOOL)arg2;	// IMP=0x00000000000f3fba
- (id)dataDirectoryForMailbox:(id)arg1;	// IMP=0x00000000000f3dfb
- (void)_invalidateDirectoryForMailboxes:(id)arg1;	// IMP=0x00000000000f3d69
- (id)databaseUUIDString;	// IMP=0x00000000000f3c5d
- (void)_setDatabaseUUIDString:(id)arg1;	// IMP=0x00000000000f3bac
- (void)loadDatabaseUUIDStringIfNeeded:(id)arg1;	// IMP=0x00000000000f3a59
- (void)updateEWSOfflineIdsToRealIds:(id)arg1;	// IMP=0x00000000000f343e
- (id)EWSSyncStateForMailbox:(id)arg1;	// IMP=0x00000000000f341b
- (void)setEWSSyncState:(id)arg1 forMailbox:(id)arg2;	// IMP=0x00000000000f33c8
- (id)EWSFolderIdsByURLForMailboxes:(id)arg1;	// IMP=0x00000000000f2c48
- (id)EWSFolderIdForMailbox:(id)arg1;	// IMP=0x00000000000f2bd9
- (void)setEWSFolderId:(id)arg1 forMailbox:(id)arg2;	// IMP=0x00000000000f26c5
- (id)_EWSProperty:(char *)arg1 forMailbox:(id)arg2 errorString:(id)arg3;	// IMP=0x00000000000f23ca
- (void)_addEWSProperty:(char *)arg1 value:(id)arg2 forMailbox:(id)arg3 errorString:(id)arg4;	// IMP=0x00000000000f2190
- (BOOL)_EWSFolderExistsForMailbox:(id)arg1 errorString:(id)arg2;	// IMP=0x00000000000f1f4a
- (BOOL)getTopLevelMimePart:(id *)arg1 headers:(id *)arg2 body:(id *)arg3 forMessage:(id)arg4 skipSignatureVerification:(BOOL)arg5;	// IMP=0x00000000000f175e
- (id)draftWithDocumentID:(id)arg1 mailbox:(id)arg2;	// IMP=0x00000000000f124d
- (id)lastMessageWithMessageID:(id)arg1 inMailbox:(id)arg2;	// IMP=0x00000000000f11b5
- (id)messagesWithMessageID:(id)arg1 inMailbox:(id)arg2;	// IMP=0x00000000000f0f88
- (void)deleteMailboxes:(id)arg1 forRebuild:(BOOL)arg2;	// IMP=0x00000000000f0904
- (BOOL)renameMailboxes:(id)arg1 to:(id)arg2;	// IMP=0x00000000000f04d5
- (void)compactMailbox:(id)arg1;	// IMP=0x00000000000f0411
- (void)cleanUpAfterRemovingMessageBatch:(id)arg1;	// IMP=0x00000000000eff10
- (BOOL)removeMessageBatch:(id)arg1 connection:(id)arg2;	// IMP=0x00000000000efcf1
- (void)removeMessages:(id)arg1 cleanUpAfter:(BOOL)arg2;	// IMP=0x00000000000ef74e
- (void)removeMessages:(id)arg1;	// IMP=0x00000000000ef737
- (void)deleteFilesForMessageWithLibraryID:(long long)arg1 emlxDirectory:(id)arg2 attachmentsDirectory:(id)arg3 cachedDirectoryContents:(id)arg4;	// IMP=0x00000000000ef31b
- (void)deleteFilesForMessage:(id)arg1 cachedDirectoryContents:(id)arg2;	// IMP=0x00000000000ef19f
- (BOOL)shouldCancel;	// IMP=0x00000000000ef197
- (void)updateFileForMessage:(id)arg1;	// IMP=0x00000000000eec9a
- (void)reloadMessage:(id)arg1;	// IMP=0x00000000000eea74
- (void)resetConversationsForExistingMessagesWithRowIDs:(id)arg1 connection:(id)arg2;	// IMP=0x00000000000ee755
- (id)snippetsForMessages:(id)arg1;	// IMP=0x00000000000ee04e
- (void)loadSecondaryMetadataForMessage:(id)arg1;	// IMP=0x00000000000ed60a
- (id)mailboxNameForMessage:(id)arg1;	// IMP=0x00000000000ed58d
- (id)accountForMessage:(id)arg1;	// IMP=0x00000000000ed53d
- (id)_remoteStoreForMessage:(id)arg1;	// IMP=0x00000000000ed41d
- (id)_mailboxForMailboxID:(long long)arg1;	// IMP=0x00000000000ed409
- (id)mailboxForMessage:(id)arg1;	// IMP=0x00000000000ed3d5
- (id)urlForMailboxID:(long long)arg1;	// IMP=0x00000000000ed159
- (void)mailboxesDidChange;	// IMP=0x00000000000ed0b7
- (void)_discardMailboxCache;	// IMP=0x00000000000ed04e
- (void)reloadMailboxCacheUsingConnection:(id)arg1 forceReload:(BOOL)arg2;	// IMP=0x00000000000ece00
- (id)copyMailboxURLToRowIDMap;	// IMP=0x00000000000eccc7
- (id)referencesForLibraryID:(long long)arg1;	// IMP=0x00000000000ec9c8
- (BOOL)boolForQuery:(id)arg1;	// IMP=0x00000000000ec733
- (unsigned long long)unsignedCountForQuery:(id)arg1 monitor:(id)arg2;	// IMP=0x00000000000ec2c5
- (BOOL)messageHasRelatedNonJunkMessages:(id)arg1;	// IMP=0x00000000000ebfd7
- (id)firstReplyToMessage:(id)arg1;	// IMP=0x00000000000ebac6
- (id)messagesWithLibraryIDs:(id)arg1 options:(unsigned int)arg2;	// IMP=0x00000000000eb884
- (id)messageWithLibraryID:(long long)arg1;	// IMP=0x00000000000eb870
- (id)_messageWithLibraryID:(long long)arg1 options:(unsigned int)arg2 uniquer:(id)arg3;	// IMP=0x00000000000eb4b2
- (id)messageWithLibraryID:(long long)arg1 options:(unsigned int)arg2;	// IMP=0x00000000000eb49d
- (id)messagesWithMessageIDHeader:(id)arg1;	// IMP=0x00000000000eb3a6
- (id)messageWithMessageID:(id)arg1;	// IMP=0x00000000000eb304
- (void)setStoreForMessage:(id)arg1 fromMailbox:(id)arg2 knownStores:(id)arg3;	// IMP=0x00000000000eb12e
- (void)_setStoreForMessage:(id)arg1 knownStores:(id)arg2;	// IMP=0x00000000000eb08c
- (void)setStoresForMessages:(id)arg1;	// IMP=0x00000000000eaf14
- (id)messageWithRemoteID:(id)arg1 inRemoteMailbox:(id)arg2 options:(unsigned int)arg3;	// IMP=0x00000000000eaaef
- (id)messagesWithRemoteIDs:(id)arg1 inMailbox:(id)arg2 options:(unsigned int)arg3;	// IMP=0x00000000000ea5f2
- (unsigned long long)unreadCountForMessageType:(BOOL)arg1;	// IMP=0x00000000000ea39f
- (unsigned long long)totalCountForMailbox:(id)arg1 unseenCount:(unsigned long long *)arg2 adjustedUnreadCount:(unsigned long long *)arg3;	// IMP=0x00000000000ea005
- (void)gatherCountsForMailbox:(id)arg1 totalCount:(unsigned long long *)arg2 unreadCount:(unsigned long long *)arg3 deletedCount:(unsigned long long *)arg4 totalSize:(unsigned long long *)arg5;	// IMP=0x00000000000e9dc5
- (long long)_addMessageToCountContext:(id)arg1 statement:(id)arg2;	// IMP=0x00000000000e9d12
- (id)unreadMessagesForMailbox:(id)arg1;	// IMP=0x00000000000e9b7c
- (id)duplicateRemoteIDsForMailboxWithURLString:(id)arg1;	// IMP=0x00000000000e992f
- (id)messagesForGmailLabel:(id)arg1 inAllMailMailbox:(id)arg2 olderThanNumberOfDays:(long long)arg3;	// IMP=0x00000000000e95cc
- (id)messagesForMailbox:(id)arg1 olderThanNumberOfDays:(long long)arg2;	// IMP=0x00000000000e9310
- (id)messagesForMailbox:(id)arg1 where:(id)arg2 sortedBy:(id)arg3 ascending:(BOOL)arg4 options:(unsigned int)arg5;	// IMP=0x00000000000e91ff
- (id)_queryForMailbox:(id)arg1 where:(id)arg2 sortedBy:(id)arg3 ascending:(BOOL)arg4 options:(unsigned int)arg5;	// IMP=0x00000000000e8f6a
- (id)messagesWhere:(id)arg1 sortedBy:(id)arg2 options:(unsigned int)arg3;	// IMP=0x00000000000e8f0a
- (id)messagesWhere:(id)arg1 sortedBy:(id)arg2 limit:(long long)arg3 options:(unsigned int)arg4;	// IMP=0x00000000000e8cb8
- (id)messagesMatchingQuery:(id)arg1 options:(unsigned int)arg2;	// IMP=0x00000000000e8ca1
- (id)messagesMatchingQuery:(id)arg1 limit:(long long)arg2 options:(unsigned int)arg3;	// IMP=0x00000000000e8b95
- (void)sendMessagesMatchingQuery:(id)arg1 to:(id)arg2 options:(unsigned int)arg3;	// IMP=0x00000000000e8b48
- (void)sendMessagesMatchingQuery:(id)arg1 to:(id)arg2 limit:(long long)arg3 options:(unsigned int)arg4;	// IMP=0x00000000000e84dc
- (void)_sendMessagesToTargetNow:(id)arg1;	// IMP=0x00000000000e8300
- (void)_handleMessageRowWithContext:(id)arg1 statement:(id)arg2 uniquer:(id)arg3 row:(id)arg4;	// IMP=0x00000000000e7f7b
- (void)setRecipientTypeForMessages:(id)arg1;	// IMP=0x00000000000e7a69
- (id)_activeMailboxesClauseRebuildIfNecessary;	// IMP=0x00000000000e78a1
- (BOOL)_isActiveMailboxID:(long long)arg1;	// IMP=0x00000000000e782d
- (id)_copyActiveMailboxesCache;	// IMP=0x00000000000e770d
- (void)_rebuildActiveMailboxesCacheIfNecessary;	// IMP=0x00000000000e762b
- (void)_rebuildActiveMailboxesCache;	// IMP=0x00000000000e6f38
- (void)_getActiveAccountURLs:(id)arg1 andActiveMailboxURLs:(id)arg2;	// IMP=0x00000000000e6b16
- (void)disableActiveMailboxFiltering;	// IMP=0x00000000000e67bc
- (void)clearActiveMailboxesCache;	// IMP=0x00000000000e670a
- (id)myAddressIDsString;	// IMP=0x00000000000e5f08
- (void)invalidateMyEmailAddressesIfContains:(id)arg1;	// IMP=0x00000000000e5e71
- (void)invalidateMyEmailAddresses;	// IMP=0x00000000000e5e07
- (id)_selectClauseForOptions:(unsigned int)arg1;	// IMP=0x00000000000e5aab
- (void)setAttachmentMetadata:(id)arg1 forMessage:(id)arg2;	// IMP=0x00000000000e54e9
- (void)updateDatabaseValuesIfNeeded;	// IMP=0x00000000000e5320
- (id)messageColorForLibraryMessageColor:(char *)arg1;	// IMP=0x00000000000e52b0
- (char *)libraryMessageColorForMessageColor:(id)arg1;	// IMP=0x00000000000e5251
- (id)referenceHashesFromMessageHeaders:(id)arg1;	// IMP=0x00000000000e4f74
- (void)addGmailLabelsToEmlx;	// IMP=0x00000000000e48ae
- (void)hideMailboxesNotInLibraryFromSpotlight;	// IMP=0x00000000000e4158
- (void)backfillDateLastViewedAttribute;	// IMP=0x00000000000e3cc1
- (void)_updateDateLastViewed:(int)arg1 forLibraryID:(long long)arg2;	// IMP=0x00000000000e3a3e
- (void)deleteDataDirectoriesForMailbox:(id)arg1;	// IMP=0x00000000000e38d6
- (void)triggerFullSpotlightImportOfMailbox:(id)arg1;	// IMP=0x00000000000e37a3
- (void)removeExtendedAttributePlistFromEmlxFile:(id)arg1;	// IMP=0x00000000000e36f9
- (id)propertyListForMessage:(id)arg1 dateReceived:(id)arg2 dateLastViewed:(id)arg3 remoteID:(id)arg4 gmailLabels:(id)arg5 flags:(long long)arg6 mergeWithDictionary:(id)arg7;	// IMP=0x00000000000e3141
- (id)_coreSpotlightIndexQueue;	// IMP=0x00000000000e307f
- (void)_deleteMailboxFromCoreSpotlight:(id)arg1 databaseID:(long long)arg2;	// IMP=0x00000000000e2d76
- (void)_deleteMessageFromCoreSpotlight:(id)arg1;	// IMP=0x00000000000e2a68
- (void)sendSearchableItemsToCoreSpotlight:(id)arg1;	// IMP=0x00000000000e267a
- (void)sendAttributesToCoreSpotlightForMessage:(id)arg1 includeBody:(BOOL)arg2 update:(BOOL)arg3;	// IMP=0x00000000000e22f0
- (id)createAddresseeStringFromDisplayName:(id)arg1 address:(id)arg2 stringUniquer:(id)arg3 addressIndex:(long long)arg4;	// IMP=0x00000000000e20bb
- (long long)rowidForMailboxURL:(id)arg1 connection:(id)arg2 cache:(id)arg3;	// IMP=0x00000000000e1b24
- (void)updateNormalizedSubjectsIfNeededWithConnection:(id)arg1;	// IMP=0x00000000000e18ed
- (void)_conversationFlagsChanged:(id)arg1;	// IMP=0x00000000000e189e
- (void)_mailAccountsDidChange:(id)arg1;	// IMP=0x00000000000e1867
- (void)_mailboxWasRenamed:(id)arg1;	// IMP=0x00000000000e176d
- (void)_mailboxWillBeInvalidated:(id)arg1;	// IMP=0x00000000000e16c5
- (BOOL)setupLibrary;	// IMP=0x00000000000e1212
- (void)removeCurrentTemporaryDatabaseFiles;	// IMP=0x00000000000e0ce7
- (id)writeQueue;	// IMP=0x00000000000e0cd6
- (BOOL)initializeDatabase:(id)arg1;	// IMP=0x00000000000e098e
- (id)contentsOfDatabaseDefinition;	// IMP=0x00000000000e064f
- (void)updateSize:(id)arg1 forMessage:(id)arg2;	// IMP=0x00000000000e04a8
- (void)setFlagsAndColorForMessages:(id)arg1;	// IMP=0x00000000000dfe4b
- (void)setBackgroundColorForMessages:(id)arg1 textColorForMessages:(id)arg2;	// IMP=0x00000000000df710
- (void)_commitFlagsForMessage:(id)arg1 oldFlags:(id)arg2;	// IMP=0x00000000000ded8b
- (void)setConversationFlags:(unsigned long long)arg1 forMessages:(id)arg2 reason:(long long)arg3;	// IMP=0x00000000000debec
- (void)addGmailLabels:(id)arg1 removeGmailLabels:(id)arg2 forMessages:(id)arg3;	// IMP=0x00000000000de883
- (id)_mailboxIDsStringForMailboxes:(id)arg1;	// IMP=0x00000000000de697
- (void)removeSourceMailbox:(id)arg1;	// IMP=0x00000000000de2a1
- (void)setSourceMailbox:(id)arg1 forMailboxes:(id)arg2;	// IMP=0x00000000000dddc5
- (void)recalculateMessageCountsForMailboxIDs:(id)arg1;	// IMP=0x00000000000dd5ee
- (void)loadMessageCountsForMailboxes;	// IMP=0x00000000000dd177
- (void)commitFlagsForMessage:(id)arg1 oldFlags:(long long)arg2;	// IMP=0x00000000000dd076
- (void)setSnippetsForMessages:(id)arg1;	// IMP=0x00000000000dcd6e
- (void)_removeGmailLabelsFromMessages:(id)arg1 libraryIDs:(id)arg2 labels:(id)arg3;	// IMP=0x00000000000dc8da
- (void)addGmailLabelsToMessagesWithConnection:(id)arg1 libraryIDs:(id)arg2 labels:(id)arg3;	// IMP=0x00000000000dc371
- (void)setFlagsForMessages:(id)arg1 messages:(id)arg2;	// IMP=0x00000000000dc341
- (void)_updateMessageFilesInBackground;	// IMP=0x00000000000dc25c
- (void)_commitMessagesInBackground:(id)arg1;	// IMP=0x00000000000dc1bc
- (void)commitSynchronouslyPostingMessages:(id)arg1 postFlags:(id)arg2 postingOldFlagsByMessage:(id)arg3;	// IMP=0x00000000000db7cd
- (void)commitSynchronously;	// IMP=0x00000000000db7b4
- (void)_synchronouslyUpdateMessageFiles;	// IMP=0x00000000000db16e
- (void)unScheduleMessageFileUpdate;	// IMP=0x00000000000db0dd
- (void)scheduleMessageFileUpdate;	// IMP=0x00000000000db037
- (void)unScheduleCommit;	// IMP=0x00000000000db023
- (void)scheduleCommit;	// IMP=0x00000000000daf5d
- (void)_setCommitTimer:(id)arg1;	// IMP=0x00000000000dae38
- (void)_addMessagesNeedingEmlxUpdate:(id)arg1;	// IMP=0x00000000000dac96
- (void)setDateReceivedInterval:(double)arg1 forMessage:(id)arg2;	// IMP=0x00000000000daa71
- (void)updateJunkMessagesForIndexing;	// IMP=0x00000000000da8c4
- (void)updateConversationFlagsForMessages:(id)arg1 flags:(unsigned long long)arg2 reason:(long long)arg3;	// IMP=0x00000000000da8a9
- (void)unmuteConversationForMessages:(id)arg1;	// IMP=0x00000000000da88f
- (void)muteConversationForMessages:(id)arg1;	// IMP=0x00000000000da872
- (void)flagsChangedForMessages:(id)arg1;	// IMP=0x00000000000da73f
- (void)restoreBackingStoreUpdateJournalIfNeeded;	// IMP=0x00000000000da4ee
- (void)_mergeRestoreMessageLibraryIDsToUpdate:(id)arg1;	// IMP=0x00000000000da377
- (BOOL)updateBackingStoreUpdateJournal;	// IMP=0x00000000000d9a22
- (BOOL)removeBackingStoreUpdateJournal;	// IMP=0x00000000000d98b9
- (id)_backingStoreJournalFile;	// IMP=0x00000000000d9860
- (id)_backingStoreJournalDirectory;	// IMP=0x00000000000d9847
- (void)commitMessage:(id)arg1 immediately:(BOOL)arg2;	// IMP=0x00000000000d9756
- (BOOL)logSQLitePerformance;	// IMP=0x00000000000d974c
- (id)init;	// IMP=0x00000000000d9205
- (void)imap_recoverLocalItemsForMailboxURL:(id)arg1 path:(id)arg2 accountDisplayName:(id)arg3;	// IMP=0x00000000000c9ac1
- (void)imap_deleteMailboxAction:(long long)arg1;	// IMP=0x00000000000c9944
- (id)imap_nextMailboxActionForAccountID:(id)arg1;	// IMP=0x00000000000c953e
- (void)imap_saveMailboxActionForAccountID:(id)arg1 action:(id)arg2;	// IMP=0x00000000000c92dd
- (id)_imap_uidsParameterForUIDs:(id)arg1 isContiguous:(BOOL)arg2;	// IMP=0x00000000000c9190
- (id)_imap_nextBatchForUIDs:(id)arg1 limit:(unsigned long long)arg2 isContiguous:(char *)arg3;	// IMP=0x00000000000c8f21
- (void)imap_setComputedHighestModificationSequence:(unsigned long long)arg1 forIMAPMailboxURL:(id)arg2;	// IMP=0x00000000000c8ce0
- (unsigned long long)imap_computedHighestModificationSequenceforIMAPMailboxURL:(id)arg1;	// IMP=0x00000000000c8ab4
- (void)imap_setAllegedHighestModificationSequence:(unsigned long long)arg1 forIMAPMailboxURL:(id)arg2;	// IMP=0x00000000000c8873
- (unsigned long long)imap_allegedHighestModificationSequenceforIMAPMailboxURL:(id)arg1;	// IMP=0x00000000000c8647
- (void)imap_compactMailbox:(id)arg1;	// IMP=0x00000000000c858a
- (void)imap_resetIMAPMessagesForMailbox:(id)arg1 duplicateMessages:(id *)arg2 invalidMessages:(id *)arg3;	// IMP=0x00000000000c7001
- (BOOL)_imap_hasLocalActionsForAccountURL:(id)arg1 connection:(id)arg2;	// IMP=0x00000000000c6c46
- (unsigned long long)_imap_countForQuery:(id)arg1 bindings:(id)arg2 connection:(id)arg3;	// IMP=0x00000000000c6a44
- (BOOL)imap_mailboxHasInconsistencies:(id)arg1;	// IMP=0x00000000000c659a

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, copy, nonatomic) NSString *displayName;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

+ (id)fullMessageDataForMessage:(id)arg1;
+ (id)_dataPathForMessage:(id)arg1 type:(long long)arg2;
+ (id)_messageDataAtPath:(id)arg1;
+ (id)attachmentsDirectoryForMessage:(id)arg1 partNumber:(id)arg2;
@end

