//
//     Generated by class-dump 3.5b1 (64 bit) (Debug version compiled Dec  3 2019 19:59:57).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <MailFW/MFAccount.h>

#import <MailFW/EDReceivingAccount-Protocol.h>
#import <MailFW/MCActivityTarget-Protocol.h>
#import <MailFW/MCMailAccount-Protocol.h>
#import <MailFW/MFMessageDelivererDelegate-Protocol.h>
#import <MailFW/NSFileManagerDelegate-Protocol.h>

@class ACAccount, ECAuthScheme, MCTaskManager, MFDeliveryAccount, MFMailbox, NSArray, NSDate, NSError, NSNumber, NSObject, NSOperationQueue, NSString, NSURL;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface MFMailAccount : MFAccount <EDReceivingAccount, MCActivityTarget, MCMailAccount, MFMessageDelivererDelegate, NSFileManagerDelegate>
{
    id _mailAccountLock;	// 8 = 0x8
    id _mailboxLock;	// 16 = 0x10
    MFMailbox *_inboxMailbox;	// 24 = 0x18
    MFMailbox *_rootMailbox;	// 32 = 0x20
    MFMailbox *_draftsMailbox;	// 40 = 0x28
    MFMailbox *_sentMessagesMailbox;	// 48 = 0x30
    MFMailbox *_trashMailbox;	// 56 = 0x38
    MFMailbox *_junkMailbox;	// 64 = 0x40
    MFMailbox *_notesMailbox;	// 72 = 0x48
    MFMailbox *_todosMailbox;	// 80 = 0x50
    MFMailbox *_outboxMailbox;	// 88 = 0x58
    MFMailbox *_archiveMailbox;	// 96 = 0x60
    NSError *_connectionError;	// 104 = 0x68
    id _cacheChangeLock;	// 112 = 0x70
    NSObject<OS_dispatch_queue> *_cacheWriteQueue;	// 120 = 0x78
    NSObject<OS_dispatch_source> *_cacheWriteTimer;	// 128 = 0x80
    id _backgroundActivityFlagsLock;	// 136 = 0x88
    BOOL _cacheHasBeenRead;	// 144 = 0x90
    BOOL _mailboxListInitializationInProgress;	// 145 = 0x91
    BOOL _needsChecking;	// 146 = 0x92
    BOOL _isInitializingmailboxList;	// 147 = 0x93
    BOOL _usesMailboxCache;	// 148 = 0x94
    NSURL *_accountDirectory;	// 152 = 0x98
    MCTaskManager *_taskManager;	// 160 = 0xa0
    NSOperationQueue *_backgroundWorkQueue;	// 168 = 0xa8
}

+ (id)csAccountTypeString;	// IMP=0x000000000015bf27
+ (id)keyPathsForValuesAffectingURLPersistenceHostname;	// IMP=0x000000000015b90c
+ (id)_mailboxNameForPathComponent:(id)arg1;	// IMP=0x0000000000156436
+ (id)_pathComponentForMailboxName:(id)arg1;	// IMP=0x0000000000156421
+ (void)_postMailAccountsHaveChanged;	// IMP=0x0000000000156274
+ (id)_accountWithFileSystemPath:(id)arg1 relativePath:(id *)arg2;	// IMP=0x0000000000155873
+ (void)_enableMailboxListingNotifications:(BOOL)arg1;	// IMP=0x00000000001556ab
+ (void)_disableMailboxListingNotifications;	// IMP=0x000000000015561d
+ (BOOL)_mailboxListingNotificationAreEnabled;	// IMP=0x0000000000155592
+ (BOOL)_mailAccountsAreInitialized;	// IMP=0x0000000000155585
+ (void)_normalizePathComponentsInMailboxesDictionary:(id)arg1 accountClass:(Class)arg2;	// IMP=0x00000000001553d8
+ (void)normalizeMailboxPathComponentsInAllAccounts;	// IMP=0x0000000000154df5
+ (void)resetCachedAccountPaths;	// IMP=0x0000000000154ab8
+ (id)mailboxForURL:(id)arg1 forceCreation:(BOOL)arg2 syncableURL:(BOOL)arg3;	// IMP=0x00000000001546ca
+ (id)accountWithURLString:(id)arg1 includeInactiveAccounts:(BOOL)arg2;	// IMP=0x0000000000154631
+ (id)accountWithURLString:(id)arg1;	// IMP=0x000000000015461d
+ (id)URLForInfo:(id)arg1;	// IMP=0x000000000015444f
+ (id)infoForURL:(id)arg1;	// IMP=0x00000000001543a1
+ (id)_accountForURL:(id)arg1;	// IMP=0x000000000015438d
+ (id)accountWithSyncableURLString:(id)arg1 includeInactiveAccounts:(BOOL)arg2;	// IMP=0x0000000000154193
+ (id)_accountForURL:(id)arg1 includeInactiveAccounts:(BOOL)arg2;	// IMP=0x0000000000153c42
+ (void)_inferMissingCanonicalEmailAddressesForAccounts:(id)arg1 usingEmailAddresses:(id)arg2;	// IMP=0x0000000000151ecd
+ (void)inferMissingCanonicalEmailAddresses;	// IMP=0x0000000000151b70
+ (id)mailboxForFileSystemPath:(id)arg1 create:(BOOL)arg2;	// IMP=0x000000000014eadc
+ (void)resetAllSpecialMailboxes;	// IMP=0x000000000014e954
+ (void)synchronouslyEmptyMailboxType:(int)arg1 inAccounts:(id)arg2;	// IMP=0x000000000014dfee
+ (BOOL)allAccountsDeleteInPlace;	// IMP=0x000000000014dce1
+ (long long)numberOfDaysToKeepLocalTrash;	// IMP=0x000000000014d8c6
+ (id)accountsInitializingMailboxList;	// IMP=0x000000000014c9cd
+ (void)connectAllAccounts;	// IMP=0x000000000014c17a
+ (void)disconnectAllAccounts;	// IMP=0x000000000014c166
+ (void)_setOnlineStateOfAllAccountsTo:(BOOL)arg1;	// IMP=0x000000000014bf8e
+ (BOOL)isAnyAccountOnline;	// IMP=0x000000000014bded
+ (BOOL)isAnyAccountOffline;	// IMP=0x000000000014bc4c
+ (void)refreshAllEmailAliases;	// IMP=0x000000000014ae18
+ (id)defaultDeliveryAccount;	// IMP=0x00000000001481b7
+ (id)accountDirectoryForSystemAccount:(id)arg1;	// IMP=0x0000000000147dc2
+ (id)newAccountWithSystemAccount:(id)arg1;	// IMP=0x00000000001471c0
+ (id)accountWithPath:(id)arg1;	// IMP=0x00000000001470e9
+ (id)allMailboxes;	// IMP=0x0000000000146e4f
+ (id)archiveMailboxes;	// IMP=0x0000000000146de5
+ (id)junkMailboxes;	// IMP=0x0000000000146db5
+ (id)draftMailboxes;	// IMP=0x0000000000146d85
+ (id)sentMessagesMailboxes;	// IMP=0x0000000000146d55
+ (id)outboxMailboxes;	// IMP=0x0000000000146d25
+ (id)trashMailboxes;	// IMP=0x0000000000146cf5
+ (id)inboxMailboxes;	// IMP=0x0000000000146cc7
+ (id)_specialMailboxesUsingBlock:(id)arg1;	// IMP=0x0000000000146abd
+ (void)setOrderedActiveMailAccounts:(id)arg1;	// IMP=0x0000000000146a18
+ (id)orderedActiveMailAccounts;	// IMP=0x0000000000146647
+ (id)specialMailboxes;	// IMP=0x00000000001463af
+ (id)outboxMessageStore:(BOOL)arg1;	// IMP=0x0000000000146325
+ (id)accountThatReceivedMessage:(id)arg1 matchingEmailAddress:(id *)arg2 fullUserName:(id *)arg3;	// IMP=0x0000000000145c93
+ (id)preferredEmailAddressToReplyToMessage:(id)arg1;	// IMP=0x0000000000145a5f
+ (id)addressesThatReceivedMessage:(id)arg1;	// IMP=0x00000000001456ab
+ (id)accountForHeaders:(id)arg1 message:(id)arg2;	// IMP=0x00000000001455a5
+ (id)accountContainingEmailAddress:(id)arg1;	// IMP=0x000000000014558e
+ (id)_accountContainingEmailAddress:(id)arg1 matchingAddress:(id *)arg2 fullUserName:(id *)arg3;	// IMP=0x0000000000144e36
+ (BOOL)isEmailAddressInAnyAccount:(id)arg1;	// IMP=0x000000000014493a
+ (id)allEmailAddressesIncludingDisplayName:(BOOL)arg1;	// IMP=0x000000000014433d
+ (id)accountWithParentIdentifier:(id)arg1;	// IMP=0x000000000014414b
+ (id)_accountFromArray:(id)arg1 withIdentifier:(id)arg2;	// IMP=0x0000000000143f3b
+ (id)accountWithIdentifier:(id)arg1;	// IMP=0x0000000000143d99
+ (void)migrateUnreadCountInMailboxCache;	// IMP=0x00000000001435a8
+ (void)saveAccountInfoToDefaults;	// IMP=0x00000000001434d7
+ (id)remoteAccounts;	// IMP=0x00000000001433f5
+ (BOOL)onlyGmailAccountsUsingAllMailAsArchiveAreActive;	// IMP=0x00000000001431a8
+ (id)activeAccounts;	// IMP=0x0000000000143149
+ (id)_activeAccountsFromArray:(id)arg1;	// IMP=0x0000000000143012
+ (void)_removeAccountFromSortedPaths:(id)arg1;	// IMP=0x0000000000142e2a
+ (void)_setMailAccounts:(id)arg1 reloadingFromStorage:(BOOL)arg2;	// IMP=0x0000000000142723
+ (void)setMailAccounts:(id)arg1;	// IMP=0x000000000014270f
+ (id)mailAccounts;	// IMP=0x0000000000142679
+ (id)_systemAccountsWithTypeIdentifiers:(id)arg1 accountStore:(id)arg2;	// IMP=0x00000000001425b0
+ (id)_newAccountsAndExistingAccounts:(id *)arg1 forAccountTypeIdentifiers:(id)arg2;	// IMP=0x0000000000142274
+ (void)reloadMailAccountsUsesMailboxCache:(BOOL)arg1;	// IMP=0x0000000000141eed
+ (void)reloadMailAccounts;	// IMP=0x0000000000141ed6
+ (BOOL)discoverSettingsForIncompleteAccounts;	// IMP=0x0000000000141bfb
+ (void)_setupSortedPathsForAccounts:(id)arg1;	// IMP=0x0000000000141a8c
+ (void)_addAccountToSortedPaths:(id)arg1;	// IMP=0x0000000000141891
+ (void)completeDeferredAccountInitialization;	// IMP=0x00000000001416dd
+ (BOOL)haveAccountsBeenConfigured;	// IMP=0x000000000014140d
+ (BOOL)accountsHaveBeenInitialized;	// IMP=0x00000000001413fa
+ (void)initialize;	// IMP=0x0000000000141322
+ (id)accountFetchLog;	// IMP=0x00000000001412c5
@property(readonly, nonatomic) NSOperationQueue *backgroundWorkQueue; // @synthesize backgroundWorkQueue=_backgroundWorkQueue;
@property(nonatomic) BOOL usesMailboxCache; // @synthesize usesMailboxCache=_usesMailboxCache;
@property(readonly, nonatomic) MCTaskManager *taskManager; // @synthesize taskManager=_taskManager;
@property(readonly) BOOL isInitializingmailboxList; // @synthesize isInitializingmailboxList=_isInitializingmailboxList;
@property(readonly, nonatomic) NSURL *accountDirectory; // @synthesize accountDirectory=_accountDirectory;
// - (void).cxx_destruct;	// IMP=0x000000000015c017
@property(readonly) BOOL sourceIsManaged;
@property(readonly, nonatomic, getter=isManaged) BOOL managed;
@property(readonly) NSArray *emailAddresses;
- (id)uniqueID;	// IMP=0x000000000015bf15
- (id)rootMailboxEvenIfInactive:(BOOL)arg1;	// IMP=0x000000000015be04
- (id)_mailboxPathPrefix:(BOOL)arg1;	// IMP=0x000000000015bde5
- (id)_URLForInfo:(id)arg1;	// IMP=0x000000000015b93e
@property(readonly, copy) NSString *URLPersistenceHostname;
@property(readonly, copy, nonatomic) NSString *URLPersistenceScheme;
- (id)_infoForMatchingURL:(id)arg1;	// IMP=0x000000000015b79a
@property(readonly, nonatomic) BOOL shouldLogDeleteActivity;
- (BOOL)_canEmptyMessagesFromMailbox:(id)arg1;	// IMP=0x000000000015b71b
- (id)_specialMailboxWithType:(int)arg1 create:(BOOL)arg2;	// IMP=0x000000000015b4d4
- (void)_setSpecialMailboxRelativePath:(id)arg1 forType:(int)arg2;	// IMP=0x000000000015b36c
- (id)_specialMailboxRelativePathForType:(int)arg1;	// IMP=0x000000000015b22b
- (void)_setSpecialMailbox:(id)arg1 forType:(int)arg2;	// IMP=0x000000000015b160
- (BOOL)_assignSpecialMailboxToAppropriateIvar:(id)arg1 forType:(int)arg2;	// IMP=0x000000000015ac9c
- (id)_defaultSpecialMailboxRelativePathForType:(int)arg1;	// IMP=0x000000000015ab90
- (void)_clearAllPathBasedCachesAndDelete:(BOOL)arg1;	// IMP=0x000000000015a932
- (void)_emptySpecialMailboxesIfNeededForQuit:(BOOL)arg1;	// IMP=0x000000000015a559
- (void)_emptySpecialMailboxesIfNeeded;	// IMP=0x000000000015a545
- (BOOL)_deleteMailbox:(id)arg1 reflectToServer:(BOOL)arg2;	// IMP=0x000000000015a4ab
- (BOOL)_setChildren:(id)arg1 addedChild:(id)arg2 forMailbox:(id)arg3;	// IMP=0x000000000015a25d
- (BOOL)_setChildren:(id)arg1 forMailbox:(id)arg2;	// IMP=0x000000000015a20e
- (id)_insertMailbox:(id)arg1 intoParent:(id)arg2 withDisplayName:(id)arg3;	// IMP=0x000000000015966c
- (void)_writeMailboxCache;	// IMP=0x00000000001592f0
- (id)_dictionaryForMailbox:(id)arg1;	// IMP=0x0000000000158dbe
- (void)_loadEntriesFromFileSystemPath:(id)arg1 parent:(id)arg2;	// IMP=0x0000000000157fc9
- (void)_synchronizeMailboxListWithFileSystemBeforeImport;	// IMP=0x0000000000157fb2
- (void)_synchronizeMailboxListWithFileSystem;	// IMP=0x0000000000157f9e
- (void)_synchronizeMailboxListWithFileSystemBeforeImport:(BOOL)arg1;	// IMP=0x0000000000157b4d
- (BOOL)_readMailboxCache;	// IMP=0x00000000001577bb
- (void)_mailboxesWereRemovedFromTree:(id)arg1 withFileSystemPaths:(id)arg2;	// IMP=0x0000000000157746
- (void)_loadMailboxListingIntoCache:(id)arg1 parent:(id)arg2 addedMailboxes:(id)arg3 removedMailboxes:(id)arg4 hasAllMailMailbox:(char *)arg5;	// IMP=0x00000000001566ca
- (void)_synchronouslyLoadListingForParent:(id)arg1;	// IMP=0x00000000001566c4
- (id)_copyMailboxWithParent:(id)arg1 name:(id)arg2 pathComponent:(id)arg3 attributes:(unsigned long long)arg4 existingMailbox:(id)arg5;	// IMP=0x000000000015652f
- (void)_writeCustomInfoToMailboxCache:(id)arg1;	// IMP=0x00000000001564b3
- (void)_readCustomInfoFromMailboxCache:(id)arg1;	// IMP=0x000000000015644b
- (void)_postMailAccountsHaveChangedIfNeeded;	// IMP=0x00000000001561f8
- (void)setisEnabled:(BOOL)arg1;	// IMP=0x0000000000155f9d
- (void)_configureMailboxCacheEvenIfInactive:(BOOL)arg1;	// IMP=0x0000000000155e49
- (void)messageDeliveryDidFinish:(id)arg1;	// IMP=0x0000000000154b3b
- (BOOL)discoverSettings;	// IMP=0x0000000000154ab0
@property(readonly) BOOL needsToDiscoverSettings;
- (void)respondToHostBecomingReachable;	// IMP=0x0000000000154a54
@property(readonly, nonatomic) BOOL storesUnseenCount;
@property(readonly, nonatomic) BOOL supportsAppleScript;
@property(readonly, nonatomic) BOOL hasTrashMailbox;
@property(readonly, nonatomic) BOOL isRemoteAccount;
@property(readonly, nonatomic) BOOL isZeroConfiguration;
@property(readonly, nonatomic) BOOL providesAccountInformation;
@property(readonly, nonatomic) BOOL canParticipateInRules;
@property(readonly, nonatomic) BOOL isEditableByUser;
@property(readonly, nonatomic) BOOL synchronizesDataWithServer;
@property(readonly, copy, nonatomic) NSString *syncableURLString;
@property(readonly, copy, nonatomic) NSString *URLString;
- (id)objectSpecifier;	// IMP=0x0000000000153b88
- (id)objectSpecifierForMailbox:(id)arg1;	// IMP=0x00000000001539e6
- (id)objectSpecifierForMessageStore:(id)arg1;	// IMP=0x0000000000153984
- (id)valueInMailboxesWithName:(id)arg1;	// IMP=0x0000000000153692
- (id)mailboxForRelativePath:(id)arg1 isFilesystemPath:(BOOL)arg2 create:(BOOL)arg3;	// IMP=0x0000000000152e9e
- (id)storeForMailbox:(id)arg1 createIfNeeded:(BOOL)arg2;	// IMP=0x0000000000152c33
- (id)storeForMailbox:(id)arg1;	// IMP=0x0000000000152ba6
@property(retain) NSError *connectionError;
- (void)accountInfoDidChange;	// IMP=0x0000000000151722
@property long long portNumber;
@property(copy) NSString *hostname;
- (void)setUsername:(id)arg1;	// IMP=0x0000000000151426
- (void)_resetAllMailboxURLs;	// IMP=0x00000000001510af
- (void)invalidateChildrenOfMailbox:(id)arg1;	// IMP=0x0000000000151098
- (BOOL)deleteMailbox:(id)arg1 reflectToServer:(BOOL)arg2;	// IMP=0x0000000000150526
- (BOOL)renameMailbox:(id)arg1 newDisplayName:(id)arg2 parent:(id)arg3;	// IMP=0x000000000014f557
- (id)createMailboxWithParent:(id)arg1 displayName:(id)arg2 localizedDisplayName:(id)arg3;	// IMP=0x000000000014f4e7
- (id)createMailboxWithParent:(id)arg1 name:(id)arg2;	// IMP=0x000000000014f48c
@property(readonly, nonatomic) BOOL supportsNormalContainerOnlyMailboxes;
- (BOOL)canMailboxBeDeleted:(id)arg1;	// IMP=0x000000000014f3ef
- (BOOL)canMailboxBeRenamed:(id)arg1;	// IMP=0x000000000014f32b
- (id)validNameForMailbox:(id)arg1 fromDisplayName:(id)arg2 error:(id *)arg3;	// IMP=0x000000000014ef47
@property(readonly, nonatomic) BOOL supportsSlashesInMailboxName;
@property(readonly, nonatomic) BOOL canMoveMailboxes;
@property(readonly, nonatomic) BOOL canCreateNewMailboxes;
@property(readonly, copy, nonatomic) NSString *mailboxPathExtension;
- (BOOL)resetSpecialMailboxes;	// IMP=0x000000000014e3c6
@property(readonly, nonatomic) BOOL containsMailboxes;
- (id)displayNameForMailbox:(id)arg1;	// IMP=0x000000000014e301
@property(readonly, copy, nonatomic) NSString *displayName;
- (void)emptySpecialMailboxesThatNeedToBeEmptiedAtQuit;	// IMP=0x000000000014df20
@property(readonly, nonatomic) BOOL canMoveDeletedMessagesToTrash;
@property BOOL shouldMoveDeletedMessagesToTrash;
@property(nonatomic) long long emptyTrashFrequency;
@property(nonatomic) long long emptyJunkFrequency;
- (void)setEmptySentMessagesFrequency:(long long)arg1;	// IMP=0x000000000014d830
- (long long)emptySentMessagesFrequency;	// IMP=0x000000000014d823
- (long long)_emptyFrequencyForMailDataclassProperty:(id)arg1 defaultValue:(long long)arg2;	// IMP=0x000000000014d74b
- (void)deleteMessagesFromMailbox:(id)arg1 olderThanNumberOfDays:(long long)arg2;	// IMP=0x000000000014d4fa
- (void)setToDosMailbox:(id)arg1;	// IMP=0x000000000014d4e3
- (void)setArchiveMailbox:(id)arg1;	// IMP=0x000000000014d4cc
@property(retain, nonatomic) MFMailbox *notesMailbox;
- (void)setSentMessagesMailbox:(id)arg1;	// IMP=0x000000000014d49e
- (void)setJunkMailbox:(id)arg1;	// IMP=0x000000000014d487
- (void)setTrashMailbox:(id)arg1;	// IMP=0x000000000014d470
- (void)setDraftsMailbox:(id)arg1;	// IMP=0x000000000014d459
- (id)allMailboxesEvenIfInactive:(BOOL)arg1;	// IMP=0x000000000014d282
@property(readonly, copy, nonatomic) NSArray *allMailboxes;
- (BOOL)containsMailboxWithURL:(id)arg1;	// IMP=0x000000000014d1c0
- (id)mailboxForType:(long long)arg1;	// IMP=0x000000000014d12a
- (id)_outboxMailboxCreateIfNeeded:(BOOL)arg1;	// IMP=0x000000000014d111
- (id)archiveMailboxCreateIfNeeded:(BOOL)arg1;	// IMP=0x000000000014d0f8
- (id)trashMailboxCreateIfNeeded:(BOOL)arg1;	// IMP=0x000000000014d0a9
- (id)sentMessagesMailboxCreateIfNeeded:(BOOL)arg1;	// IMP=0x000000000014d090
- (id)junkMailboxCreateIfNeeded:(BOOL)arg1;	// IMP=0x000000000014d077
- (id)draftsMailboxCreateIfNeeded:(BOOL)arg1;	// IMP=0x000000000014d05e
- (id)inboxMailboxCreateIfNeeded:(BOOL)arg1;	// IMP=0x000000000014cfbb
@property(readonly) BOOL shouldArchiveByDefault;
@property(readonly) BOOL isLocalAccount;
@property(readonly, nonatomic) BOOL rootChildrenCanBePromoted;
@property(readonly) BOOL rootMailboxExists;
- (BOOL)mailboxIsRootMailbox:(id)arg1;	// IMP=0x000000000014ceda
@property(readonly, copy) MFMailbox *rootMailbox;
@property(readonly) MFMailbox *primaryMailbox;
@property(readonly, nonatomic) BOOL hasSyncActivity;
@property(readonly, nonatomic) BOOL isFetching;
- (void)stopAccountActivity;	// IMP=0x000000000014ce4a
- (void)fetchAsynchronouslyIsAuto:(BOOL)arg1;	// IMP=0x000000000014ce44
- (BOOL)shouldFetchIsAuto:(BOOL)arg1;	// IMP=0x000000000014cdd3
@property BOOL needsChecking;
- (void)didInitializeMailboxList;	// IMP=0x000000000014cc63
- (void)willInitializeMailboxList;	// IMP=0x000000000014cc06
- (BOOL)isInitializingMailboxList;	// IMP=0x000000000014cba8
- (BOOL)_supportsMailboxListInitialization;	// IMP=0x000000000014cba0
@property(readonly, nonatomic) BOOL canBeSynchronized;
@property(readonly, nonatomic) BOOL canAppendMessages;
- (void)synchronizeWithFilesystem;	// IMP=0x000000000014c8d8
@property(readonly, nonatomic) NSOperationQueue *remoteFetchQueue;
@property(readonly, nonatomic) NSOperationQueue *remoteTaskQueue;
@property(readonly, nonatomic) BOOL canFetch;
- (void)setIsWillingToGoOnline:(BOOL)arg1;	// IMP=0x000000000014c85d
- (void)setIsOffline:(BOOL)arg1;	// IMP=0x000000000014c6fd
- (void)invalidateAllStores;	// IMP=0x000000000014c53d
- (void)doRoutineCleanup;	// IMP=0x000000000014c4a5
- (void)_scheduleCacheWriteIfNeeded;	// IMP=0x000000000014c309
- (void)_cancelCacheWriteTimer;	// IMP=0x000000000014c284
- (void)saveCacheImmediately:(BOOL)arg1;	// IMP=0x000000000014c191
- (void)deleteAccount;	// IMP=0x000000000014ba07
- (void)_synchronouslyInvalidateAndDelete:(BOOL)arg1;	// IMP=0x000000000014b5cc
- (BOOL)fileManager:(id)arg1 shouldProceedAfterError:(id)arg2 removingItemAtURL:(id)arg3;	// IMP=0x000000000014b580
- (BOOL)fileManager:(id)arg1 shouldProceedAfterError:(id)arg2 removingItemAtPath:(id)arg3;	// IMP=0x000000000014b534
- (void)promptUserForDeletionInWindow:(id)arg1 completion:(id)arg2;	// IMP=0x000000000014b4ac
- (void)setShouldAutoFetch:(BOOL)arg1;	// IMP=0x000000000014b4a6
- (BOOL)shouldAutoFetch;	// IMP=0x000000000014b49b
- (void)setParentAccountDefaultAlias:(id)arg1;	// IMP=0x000000000014a588
- (BOOL)getDefaultEmailAliasDisplayName:(id *)arg1 emailAddress:(id *)arg2;	// IMP=0x0000000000149f79
@property(readonly) NSURL *emailAliasesEditingURL;
@property(copy) NSArray *emailAliases;
- (void)setApplescriptEmailAddresses:(id)arg1;	// IMP=0x000000000014936b
- (id)applescriptEmailAddresses;	// IMP=0x0000000000149321
@property(copy) NSArray *emailAddressStrings;
@property(readonly, copy) NSArray *rawEmailAddresses;
@property(readonly, copy) NSString *firstEmailAddress;
@property BOOL deliveryAccountIsLocked;
- (void)_mailboxUserInfoDidChange:(id)arg1;	// IMP=0x00000000001488d6
@property(retain, nonatomic) NSNumber *useMailDrop;
- (void)_deliveryAccountWillBeRemoved:(id)arg1;	// IMP=0x0000000000148756
@property(readonly, nonatomic) MFDeliveryAccount *dynamicDeliveryAccount;
@property(retain, nonatomic) MFDeliveryAccount *deliveryAccount;
@property(copy) NSString *smtpIdentifier;
@property(copy) NSString *fullUserName;
- (void)setApplescriptFullUserName:(id)arg1;	// IMP=0x0000000000147fbc
- (id)applescriptFullUserName;	// IMP=0x0000000000147f70
- (id)path;	// IMP=0x0000000000147d72
@property(readonly, copy, nonatomic) NSString *statisticsKind;
- (BOOL)_performBlock:(id)arg1 forMessagesFetchedWithBlock:(id)arg2 withBatchSize:(unsigned long long)arg3;	// IMP=0x000000000014772e
- (void)completeDeferredInitialization;	// IMP=0x0000000000147728
- (void)dealloc;	// IMP=0x0000000000147689
- (id)initWithSystemAccount:(id)arg1;	// IMP=0x00000000001473b7
- (id)_newTaskManager;	// IMP=0x00000000001471b8
@property(readonly) MFMailbox *allMailMailbox;
@property(readonly, nonatomic) MFMailbox *todosMailbox;
- (BOOL)mailboxIsEmpty:(id)arg1;	// IMP=0x0000000000146194
- (BOOL)hasEmailAddress:(id)arg1;	// IMP=0x0000000000144aba
@property(readonly, copy) NSString *backupID;
- (void)setEmptyJunkOnQuit:(BOOL)arg1;	// IMP=0x000000000014129f
- (BOOL)emptyJunkOnQuit;	// IMP=0x0000000000141282
- (void)setEmptySentMessagesOnQuit:(BOOL)arg1;	// IMP=0x000000000014127c
- (BOOL)emptySentMessagesOnQuit;	// IMP=0x0000000000141274
- (void)setEmptyTrashOnQuit:(BOOL)arg1;	// IMP=0x000000000014124e
- (BOOL)emptyTrashOnQuit;	// IMP=0x0000000000141231
- (void)insertInMailboxes:(id)arg1;	// IMP=0x000000000014121d
- (void)insertInMailboxes:(id)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x000000000014117c
@property(readonly, copy, nonatomic) NSArray *mailboxes;
- (id)indicesOfObjectsByEvaluatingObjectSpecifier:(id)arg1;	// IMP=0x0000000000140e58

// Remaining properties
@property(readonly, copy) NSString *accountTypeString;
@property BOOL allowInsecureAuthentication;
@property(readonly, copy) NSString *appleAuthenticationToken;
@property(readonly, copy) NSString *applePersonID;
@property(copy) NSString *authenticationScheme;
@property(copy) NSString *canonicalEmailAddress;
@property(readonly, copy) NSString *clientInfo;
@property BOOL configureDynamically;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, copy, nonatomic) NSDate *expiryDate;
@property(copy) NSString *externalHostname;
@property(readonly) unsigned long long hash;
@property(readonly, copy) NSString *identifier;
@property(readonly, nonatomic) BOOL isGmailAccount;
@property(readonly) BOOL isManaged;
@property(readonly) BOOL isYahooAccount;
@property(readonly, copy) NSString *machineID;
@property(readonly, copy) NSString *oauthToken;
@property(readonly, copy) NSString *oneTimePassword;
@property(copy) NSString *password;
@property(retain) ECAuthScheme *preferredAuthScheme;
@property(readonly) BOOL primaryiCloudAccount;
@property(readonly, nonatomic) BOOL requiresAuthentication;
@property(readonly, copy, nonatomic) NSString *saslProfileName;
@property long long securityLayerType;
@property BOOL shouldUseAuthentication;
@property(readonly, copy, nonatomic) NSArray *standardPorts;
@property(readonly, copy, nonatomic) NSArray *standardSSLPorts;
@property(readonly) Class superclass;
@property(readonly, copy) ACAccount *systemAccount;
@property(readonly, copy) NSString *username;
@property BOOL usesSSL;

@end

