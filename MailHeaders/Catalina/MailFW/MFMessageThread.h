//
//     Generated by class-dump 3.5b1 (64 bit) (Debug version compiled Dec  3 2019 19:59:57).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <MailCore/MCMessage.h>

@class MFMailbox, NSArray, NSIndexSet, NSMutableArray, NSMutableDictionary, NSSet, NSString;

@interface MFMessageThread : MCMessage
{
    NSMutableArray *_orderedMessages;	// 104 = 0x68
    NSString *_formattedUnreadMessageCount;	// 112 = 0x70
    NSMutableDictionary *_pendingChanges;	// 120 = 0x78
    MCMessage *_newestMessage;	// 128 = 0x80
    MCMessage *_oldestMessage;	// 136 = 0x88
    MCMessage *_newestReceivedMessage;	// 144 = 0x90
    MCMessage *_newestSentMessage;	// 152 = 0x98
    MCMessage *_newestReadMessage;	// 160 = 0xa0
    MCMessage *_snippetMessage;	// 168 = 0xa8
    MCMessage *_messageWithHighestLibraryID;	// 176 = 0xb0
    NSIndexSet *_primaryMessageIndexes;	// 184 = 0xb8
    unsigned int _unreadMessageCount;	// 192 = 0xc0
    unsigned int _flaggedMessageCount;	// 196 = 0xc4
    unsigned int _junkMessageCount;	// 200 = 0xc8
    unsigned int _deletedMessageCount;	// 204 = 0xcc
    unsigned int _attachmentCount;	// 208 = 0xd0
    BOOL _isThreadOpen;	// 212 = 0xd4
}

+ (id)sendersStringForMessages:(id)arg1 primaryIndexes:(id)arg2;	// IMP=0x00000000001b3f9c
+ (id)findMessageWithHighestLibraryIDInMessages:(id)arg1;	// IMP=0x00000000001b3e0b
+ (id)findSnippetMessageInMessages:(id)arg1;	// IMP=0x00000000001b3be8
+ (id)findOldestMessageInMessages:(id)arg1;	// IMP=0x00000000001b3b1f
+ (id)findNewestReadMessageInMessages:(id)arg1;	// IMP=0x00000000001b3906
+ (id)findNewestSentMessageInMessages:(id)arg1;	// IMP=0x00000000001b3581
+ (id)findNewestReceivedMessageInMessages:(id)arg1;	// IMP=0x00000000001b31fc
+ (id)findNewestMessageInMessages:(id)arg1;	// IMP=0x00000000001b3016
+ (id)messagesByExpandingThreads:(id)arg1;	// IMP=0x00000000001aa591
@property BOOL isThreadOpen; // @synthesize isThreadOpen=_isThreadOpen;
// - (void).cxx_destruct;	// IMP=0x00000000001b432f
- (id)_threadComparator;	// IMP=0x00000000001b4227
@property(readonly, copy, nonatomic) NSSet *allContainingLabelsAndMailboxes;
- (id)gmailLabels;	// IMP=0x00000000001b2c05
@property(readonly, nonatomic) MFMailbox *mailbox;
@property(readonly) MCMessage *messageWithHighestLibraryID;
@property(readonly) MCMessage *snippetMessage;
@property(readonly) MCMessage *newestReadMessage;
@property(readonly) MCMessage *newestSentMessage;
@property(readonly) MCMessage *newestMessage;
@property(readonly) MCMessage *oldestMessage;
- (BOOL)willBeDeletedIfMessagesAreDeleted:(id)arg1;	// IMP=0x00000000001b22a3
@property BOOL isOpen;
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00000000001b2055
- (long long)messageFlags;	// IMP=0x00000000001b1f1f
- (unsigned long long)numberOfAttachments;	// IMP=0x00000000001b1ed7
- (unsigned long long)messageSize;	// IMP=0x00000000001b1d49
- (id)dataSource;	// IMP=0x00000000001b1d41
- (id)messageID;	// IMP=0x00000000001b1c42
- (id)senderDisplayNameInfo;	// IMP=0x00000000001b1c3a
- (id)senderDisplayName;	// IMP=0x00000000001b1a7a
@property(readonly, copy) NSString *sendersString;
- (id)sender;	// IMP=0x00000000001b165f
- (double)dateLastViewedAsTimeIntervalSince1970;	// IMP=0x00000000001b1526
- (double)dateSentAsTimeIntervalSince1970;	// IMP=0x00000000001b13b6
- (double)dateReceivedAsTimeIntervalSince1970;	// IMP=0x00000000001b1246
- (id)subject;	// IMP=0x00000000001b11a5
- (id)to;	// IMP=0x00000000001b0f7f
- (void)setOldestMessage:(id)arg1;	// IMP=0x00000000001b0e82
- (void)setNewestSentMessage:(id)arg1;	// IMP=0x00000000001b0e08
- (void)setNewestReceivedMessage:(id)arg1;	// IMP=0x00000000001b0d8e
- (void)setNewestMessage:(id)arg1;	// IMP=0x00000000001b0ca4
@property(readonly) unsigned long long numberOfUnreadMessages;
- (id)objectInOrderedMessagesAtIndex:(unsigned long long)arg1;	// IMP=0x00000000001b0ad5
@property(readonly, copy) NSArray *reverseOrderedMessages;
@property(readonly, copy) NSArray *orderedMessages;
@property(readonly) unsigned long long countOfOrderedMessages;
@property(readonly, copy) NSString *formattedUnreadMessageCount;
- (id)_numberFormatter;	// IMP=0x00000000001b04af
- (void)updateSubjectEtc;	// IMP=0x00000000001b01e5
- (BOOL)conversationFlagsHaveChanged;	// IMP=0x00000000001b01da
- (BOOL)flagsHaveChanged;	// IMP=0x00000000001af3b7
- (BOOL)commitPendingChangesForTaskID:(id)arg1;	// IMP=0x00000000001aeb2e
- (void)messageBecamePrimary:(id)arg1;	// IMP=0x00000000001ae844
- (void)replaceMessage:(id)arg1 withMessage:(id)arg2;	// IMP=0x00000000001ae51e
- (id)_invertedIndexes:(id)arg1 count:(unsigned long long)arg2;	// IMP=0x00000000001ae43f
- (id)deleteMessages:(id)arg1;	// IMP=0x00000000001ac9b2
- (id)addMessages:(id)arg1 secondaryMessages:(id)arg2;	// IMP=0x00000000001aae8f
@property(readonly) unsigned long long conversationFlags;
@property(readonly) long long conversationID;
- (id)_changeDictionaryForTaskID:(id)arg1 toModify:(BOOL)arg2;	// IMP=0x00000000001aab25
- (id)appliedFlagColors;	// IMP=0x00000000001aa934
- (id)init;	// IMP=0x00000000001aa87a

@end

