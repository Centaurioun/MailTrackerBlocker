//
//     Generated by class-dump 3.5b1 (64 bit) (Debug version compiled Dec  3 2019 19:59:57).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <AppKit/NSViewController.h>

#import "ComposeBackEndDelegate-Protocol.h"
#import "LoadingOverlayModalDelegate-Protocol.h"
#import "MCActivityTarget-Protocol.h"
#import "NSSharingServiceDelegate-Protocol.h"
#import "NSTextFinderClient-Protocol.h"
#import "NSTouchBarDelegate-Protocol.h"
#import "NSUserInterfaceValidations-Protocol.h"
#import "PopoutAnimationContentProvider-Protocol.h"
#import "ReportBugWindowControllerDelegate-Protocol.h"
#import "TerminationHandler-Protocol.h"

@class ComposeBackEnd, ComposeStatusView, DeliveryFailure, EFFuture, EditableWebMessageDocument, EditingWebMessageController, FindBarContainer, HeadersEditor, LoadingOverlay, MCAttachment, NSArray, NSButton, NSDictionary, NSOperation, NSOperationQueue, NSStackView, NSString, NSTextFinder, NSTouchBar, NSView, ReportBugWindowController, WebArchive, WebViewEditor, _ControllerTitleTransformer;
@protocol ComposeContext, ComposeViewControllerDelegate;

@interface ComposeViewController : NSViewController <LoadingOverlayModalDelegate, ReportBugWindowControllerDelegate, NSTouchBarDelegate, ComposeBackEndDelegate, MCActivityTarget, NSTextFinderClient, NSSharingServiceDelegate, NSUserInterfaceValidations, PopoutAnimationContentProvider, TerminationHandler>
{
    ComposeBackEnd *_backEnd;	// 16 = 0x10
    BOOL _showsConfirmSendingTouchBar;	// 24 = 0x18
    NSTouchBar *_standardTouchBar;	// 32 = 0x20
    NSTouchBar *_confirmSendingTouchBar;	// 40 = 0x28
    id _confirmSendingTouchBarEventMonitor;	// 48 = 0x30
    BOOL _shouldSaveWhenClosing;	// 56 = 0x38
    BOOL _hasIncludedAttachmentsFromOriginal;	// 57 = 0x39
    BOOL _isShareKitOriginated;	// 58 = 0x3a
    BOOL _isFinishedLoading;	// 59 = 0x3b
    BOOL _sendWhenFinishLoading;	// 60 = 0x3c
    BOOL _wantsToClose;	// 61 = 0x3d
    BOOL _userSavedMessage;	// 62 = 0x3e
    BOOL _isAutoSaving;	// 63 = 0x3f
    BOOL _hasUserMadeChanges;	// 64 = 0x40
    BOOL _isBeingPreparedForSending;	// 65 = 0x41
    BOOL _userKnowsSaveFailed;	// 66 = 0x42
    BOOL _shouldIncludeEditingHistoryInDiagnostics;	// 67 = 0x43
    BOOL _shouldUseObfuscationWhenSavingEditingHistory;	// 68 = 0x44
    id <ComposeViewControllerDelegate> _delegate;	// 72 = 0x48
    WebViewEditor *_webViewEditor;	// 80 = 0x50
    HeadersEditor *_headersEditor;	// 88 = 0x58
    long long _messageType;	// 96 = 0x60
    LoadingOverlay *_loadingOverlay;	// 104 = 0x68
    NSStackView *_contentStack;	// 112 = 0x70
    NSString *_URLShareUUID;	// 120 = 0x78
    WebArchive *_pageWebArchive;	// 128 = 0x80
    WebArchive *_readerWebArchive;	// 136 = 0x88
    MCAttachment *_PDFAttachment;	// 144 = 0x90
    ComposeStatusView *_composeStatusView;	// 152 = 0x98
    NSView *_clippingView;	// 160 = 0xa0
    unsigned long long _textLengthForLastEstimatedMessageSize;	// 168 = 0xa8
    NSOperationQueue *_operationQueue;	// 176 = 0xb0
    NSView *_statusRow;	// 184 = 0xb8
    NSDictionary *_toolbarItems;	// 192 = 0xc0
    NSOperation *_savedFinishLoadingEditorOperation;	// 200 = 0xc8
    _ControllerTitleTransformer *_titleTransformer;	// 208 = 0xd0
    DeliveryFailure *_deliveryFailure;	// 216 = 0xd8
    NSArray *_unapprovedRecipients;	// 224 = 0xe0
    NSButton *_includeExcludeAttachmentsButton;	// 232 = 0xe8
    ReportBugWindowController *_reportBugWindowController;	// 240 = 0xf0
    EditingWebMessageController *_webMessageController;	// 248 = 0xf8
    NSDictionary *_settings;	// 256 = 0x100
    FindBarContainer *_findBarContainer;	// 264 = 0x108
    NSTextFinder *_textFinder;	// 272 = 0x110
}

+ (void)_setMessageStatus:(id)arg1 onMessageID:(id)arg2;	// IMP=0x00000001000f96eb
+ (id)documentWebPreferencesIdentifierForRichText:(BOOL)arg1;	// IMP=0x00000001000f18bc
+ (id)allocWithZone:(struct _NSZone *)arg1;	// IMP=0x00000001000ed3a0
@property(retain, nonatomic) NSTextFinder *textFinder; // @synthesize textFinder=_textFinder;
@property(nonatomic) __weak FindBarContainer *findBarContainer; // @synthesize findBarContainer=_findBarContainer;
@property(copy, nonatomic) NSDictionary *settings; // @synthesize settings=_settings;
@property(retain, nonatomic) EditingWebMessageController *webMessageController; // @synthesize webMessageController=_webMessageController;
@property(nonatomic) BOOL shouldUseObfuscationWhenSavingEditingHistory; // @synthesize shouldUseObfuscationWhenSavingEditingHistory=_shouldUseObfuscationWhenSavingEditingHistory;
@property(nonatomic) BOOL shouldIncludeEditingHistoryInDiagnostics; // @synthesize shouldIncludeEditingHistoryInDiagnostics=_shouldIncludeEditingHistoryInDiagnostics;
@property(retain, nonatomic) ReportBugWindowController *reportBugWindowController; // @synthesize reportBugWindowController=_reportBugWindowController;
@property(retain, nonatomic) NSButton *includeExcludeAttachmentsButton; // @synthesize includeExcludeAttachmentsButton=_includeExcludeAttachmentsButton;
@property(nonatomic) BOOL userKnowsSaveFailed; // @synthesize userKnowsSaveFailed=_userKnowsSaveFailed;
@property(nonatomic) BOOL isBeingPreparedForSending; // @synthesize isBeingPreparedForSending=_isBeingPreparedForSending;
@property(nonatomic) BOOL hasUserMadeChanges; // @synthesize hasUserMadeChanges=_hasUserMadeChanges;
@property(nonatomic) BOOL isAutoSaving; // @synthesize isAutoSaving=_isAutoSaving;
@property(nonatomic) BOOL userSavedMessage; // @synthesize userSavedMessage=_userSavedMessage;
@property(nonatomic) BOOL wantsToClose; // @synthesize wantsToClose=_wantsToClose;
@property(copy, nonatomic) NSArray *unapprovedRecipients; // @synthesize unapprovedRecipients=_unapprovedRecipients;
@property(nonatomic) BOOL sendWhenFinishLoading; // @synthesize sendWhenFinishLoading=_sendWhenFinishLoading;
@property(retain, nonatomic) DeliveryFailure *deliveryFailure; // @synthesize deliveryFailure=_deliveryFailure;
@property(readonly, nonatomic) _ControllerTitleTransformer *titleTransformer; // @synthesize titleTransformer=_titleTransformer;
@property(nonatomic) __weak NSOperation *savedFinishLoadingEditorOperation; // @synthesize savedFinishLoadingEditorOperation=_savedFinishLoadingEditorOperation;
@property(copy, nonatomic) NSDictionary *toolbarItems; // @synthesize toolbarItems=_toolbarItems;
@property(nonatomic) __weak NSView *statusRow; // @synthesize statusRow=_statusRow;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(nonatomic) unsigned long long textLengthForLastEstimatedMessageSize; // @synthesize textLengthForLastEstimatedMessageSize=_textLengthForLastEstimatedMessageSize;
@property(retain, nonatomic) NSView *clippingView; // @synthesize clippingView=_clippingView;
@property(retain, nonatomic) ComposeStatusView *composeStatusView; // @synthesize composeStatusView=_composeStatusView;
@property(nonatomic) BOOL isFinishedLoading; // @synthesize isFinishedLoading=_isFinishedLoading;
@property(retain, nonatomic) MCAttachment *PDFAttachment; // @synthesize PDFAttachment=_PDFAttachment;
@property(retain, nonatomic) WebArchive *readerWebArchive; // @synthesize readerWebArchive=_readerWebArchive;
@property(retain, nonatomic) WebArchive *pageWebArchive; // @synthesize pageWebArchive=_pageWebArchive;
@property(retain, nonatomic) NSString *URLShareUUID; // @synthesize URLShareUUID=_URLShareUUID;
@property(nonatomic) BOOL isShareKitOriginated; // @synthesize isShareKitOriginated=_isShareKitOriginated;
@property(nonatomic) __weak NSStackView *contentStack; // @synthesize contentStack=_contentStack;
@property(retain, nonatomic) LoadingOverlay *loadingOverlay; // @synthesize loadingOverlay=_loadingOverlay;
@property(nonatomic) long long messageType; // @synthesize messageType=_messageType;
@property(nonatomic) BOOL hasIncludedAttachmentsFromOriginal; // @synthesize hasIncludedAttachmentsFromOriginal=_hasIncludedAttachmentsFromOriginal;
@property(retain, nonatomic) HeadersEditor *headersEditor; // @synthesize headersEditor=_headersEditor;
@property(nonatomic) BOOL shouldSaveWhenClosing; // @synthesize shouldSaveWhenClosing=_shouldSaveWhenClosing;
@property(retain, nonatomic) WebViewEditor *webViewEditor; // @synthesize webViewEditor=_webViewEditor;
@property(nonatomic) __weak id <ComposeViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
// - (void).cxx_destruct;	// IMP=0x0000000100100d00
@property(readonly, nonatomic) Class backEndClass;
- (void)nowWouldBeAGoodTimeToTerminate:(id)arg1;	// IMP=0x0000000100100561
- (id)dictionaryRepresentation;	// IMP=0x0000000100100374
- (id)_bodySnapshot;	// IMP=0x00000001001002e7
- (struct CGRect)_composeFrame;	// IMP=0x0000000100100284
- (struct CGRect)_headerFrame;	// IMP=0x0000000100100183
- (id)getContentGeometryData;	// IMP=0x00000001000fff9b
- (void)getSnapshotParts:(id)arg1;	// IMP=0x00000001000ffce9
- (void)replyAllMessage:(id)arg1;	// IMP=0x00000001000ffc0b
- (void)replyMessage:(id)arg1;	// IMP=0x00000001000ffb2d
- (void)changeReplyMode:(id)arg1;	// IMP=0x00000001000ffaa4
- (void)reportBug:(id)arg1;	// IMP=0x00000001000ffa06
- (void)_openNewCompositionRadar;	// IMP=0x00000001000ff825
- (void)closeWindowForController:(id)arg1;	// IMP=0x00000001000ff7e8
- (void)controller:(id)arg1 runSysdiagnoseWithObfuscation:(BOOL)arg2;	// IMP=0x00000001000ff67d
- (void)controller:(id)arg1 saveOnlyEditingWithObfuscation:(BOOL)arg2;	// IMP=0x00000001000ff4e3
- (void)_restoreOriginalAttachments:(id)arg1;	// IMP=0x00000001000ff41b
- (void)insertOriginalAttachments:(id)arg1;	// IMP=0x00000001000ff238
@property(readonly, getter=isEditable) BOOL editable;
- (void)performTextFinderAction:(id)arg1;	// IMP=0x00000001000ff17f
- (void)_ensureTextFinder;	// IMP=0x00000001000ff176
- (void)forceClose;	// IMP=0x00000001000ff12a
- (void)show;	// IMP=0x00000001000ff0de
- (void)_addAttachmentsFromShareKit;	// IMP=0x00000001000ff016
- (BOOL)_isReplyingFromShareKitWithFileAttachments;	// IMP=0x00000001000fef59
- (id)_messageBodyFromShareDictionary:(id)arg1;	// IMP=0x00000001000fdce0
- (void)_showURLPicker;	// IMP=0x00000001000fdc76
- (void)_setupDefaultURLState;	// IMP=0x00000001000fd9fd
- (BOOL)_needsURLPicker;	// IMP=0x00000001000fd9c8
- (void)_showURLPickerIfNeeded;	// IMP=0x00000001000fd981
- (void)_validateURLPicker;	// IMP=0x00000001000fd665
- (void)_insertUserHTMLDivs;	// IMP=0x00000001000fd59d
- (void)_getUserHTMLForEditing;	// IMP=0x00000001000fd4d5
- (void)_addBaseURLToDocumentIfNeeded;	// IMP=0x00000001000fd40d
- (id)_newOriginalSharingSourceURLHTMLString;	// IMP=0x00000001000fd2e0
- (void)_changeSharedURLToDisplayType:(long long)arg1;	// IMP=0x00000001000fd218
- (void)refreshShareContentsForDisplayType:(long long)arg1;	// IMP=0x00000001000fd1a9
- (void)URLPickerPopupChanged:(id)arg1;	// IMP=0x00000001000fd106
- (void)insertEmoji:(id)arg1;	// IMP=0x00000001000fd0ea
- (void)setMessagePriority:(id)arg1;	// IMP=0x00000001000fd078
- (void)useInspectorBar:(id)arg1;	// IMP=0x00000001000fd003
- (void)_registerSelectionRestorationWithUndoManager:(id)arg1;	// IMP=0x00000001000fcf3b
- (void)toggleRich:(id)arg1;	// IMP=0x00000001000fcd54
- (void)makePlainText:(id)arg1;	// IMP=0x00000001000fcd00
- (void)makeRichText:(id)arg1;	// IMP=0x00000001000fccad
- (void)_generateMessageBodiesToAppendForMessages:(id)arg1;	// IMP=0x00000001000fc97b
- (void)_appendMessages:(id)arg1 withMessageBodies:(id)arg2;	// IMP=0x00000001000fc8b3
- (void)_removeAllFormatting;	// IMP=0x00000001000fc7eb
- (void)appendMessageArray:(id)arg1;	// IMP=0x00000001000fc6e2
- (void)appendMessages:(id)arg1;	// IMP=0x00000001000fc65a
- (void)updateUIAfterAppleScriptModification:(id)arg1;	// IMP=0x00000001000fc5b5
- (void)toggleCheckGrammarWithSpelling:(id)arg1;	// IMP=0x00000001000fc4f2
- (void)changeSpellCheckingBehavior:(id)arg1;	// IMP=0x00000001000fc43c
- (void)_printAsExportJob:(BOOL)arg1;	// IMP=0x00000001000fc108
- (void)exportAsPDF:(id)arg1;	// IMP=0x00000001000fc0f1
- (void)showPrintPanel:(id)arg1;	// IMP=0x00000001000fc0dd
- (void)setInitialFirstResponder;	// IMP=0x00000001000fc084
- (void)viewWillClose;	// IMP=0x00000001000fbe78
- (BOOL)canSave;	// IMP=0x00000001000fbdd2
@property(readonly, nonatomic) BOOL hasChanges;
- (void)saveDocument:(id)arg1;	// IMP=0x00000001000fbaea
- (void)saveMessageToDrafts:(id)arg1;	// IMP=0x00000001000fbaa0
- (void)_setUserSavedMessageAndPostNotification:(BOOL)arg1;	// IMP=0x00000001000fb9e6
- (void)canClose:(id)arg1;	// IMP=0x00000001000fb4ef
- (void)_saveMessageDueToUserAction:(BOOL)arg1;	// IMP=0x00000001000fb3b4
- (void)autoSave;	// IMP=0x00000001000fb366
- (void)setInsertionPointAtEnd;	// IMP=0x00000001000fb29e
- (void)activityHandoffFailed;	// IMP=0x00000001000fb28c
@property(nonatomic) BOOL shouldCloseWindowWhenAnimationCompletes;
@property(readonly, nonatomic) EFFuture *estimatedMessageSize;
- (void)backEndHandedMessageToDevice:(id)arg1;	// IMP=0x00000001000fac8b
- (void)backEndDidCancelMessageDeliveryForAttachmentError:(id)arg1;	// IMP=0x00000001000faa12
- (void)backEnd:(id)arg1 didCancelMessageDeliveryForError:(id)arg2;	// IMP=0x00000001000fa9f6
- (void)backEnd:(id)arg1 didCancelMessageDeliveryForEncryptionError:(id)arg2;	// IMP=0x00000001000fa8d0
- (void)backEnd:(id)arg1 didCancelMessageDeliveryForMissingCertificatesForRecipients:(id)arg2;	// IMP=0x00000001000fa788
- (BOOL)backEnd:(id)arg1 shouldDeliverMessage:(id)arg2;	// IMP=0x00000001000fa669
- (BOOL)backEnd:(id)arg1 shouldSaveMessage:(id)arg2;	// IMP=0x00000001000fa5f1
- (void)_prependBRToBody;	// IMP=0x00000001000fa529
- (void)backEndDidLoadInitialContent:(id)arg1 mayUseDarkAppearance:(BOOL)arg2;	// IMP=0x00000001000fa292
- (void)loadingOverlayDidEnd:(id)arg1 returnCode:(long long)arg2;	// IMP=0x00000001000fa258
- (id)_composeView;	// IMP=0x00000001000fa18f
- (void)backEnd:(id)arg1 didBeginBackgroundLoadActivity:(id)arg2;	// IMP=0x00000001000fa028
- (void)backEndDidSaveMessage:(id)arg1 result:(long long)arg2;	// IMP=0x00000001000f9cb4
- (void)_setMessageStatusOnOriginalMessage;	// IMP=0x00000001000f9938
- (void)backEndDidAppendMessageToOutbox:(id)arg1 result:(long long)arg2;	// IMP=0x00000001000f95a5
- (void)backEndDidChange:(id)arg1;	// IMP=0x00000001000f93c3
- (void)backEnd:(id)arg1 willCreateMessageWithHeaders:(id)arg2;	// IMP=0x00000001000f91c7
- (void)_showMailDropAlert:(id)arg1 forAttachmentCount:(unsigned long long)arg2;	// IMP=0x00000001000f8a5f
@property(readonly, nonatomic) EFFuture *canSendViaMailDrop;
- (void)encryptionStatusDidChange;	// IMP=0x00000001000f8763
- (id)_newEncryptionVerificationAlert;	// IMP=0x00000001000f854b
- (id)_newShouldDeliverMessageWithoutEncryptionAlertWithMessage:(id)arg1;	// IMP=0x00000001000f8378
- (id)_newFailedToCreateMessageAlert;	// IMP=0x00000001000f825f
- (id)_newSaveFailureAlert;	// IMP=0x00000001000f814c
- (id)_newAppendToOutboxFailedAlert;	// IMP=0x00000001000f803a
- (id)_newCannotSaveToOutboxAlert;	// IMP=0x00000001000f7f21
- (id)_newShouldSaveAlert;	// IMP=0x00000001000f7ca8
- (id)_newAlertForMalformedAddress:(id)arg1;	// IMP=0x00000001000f7a29
- (id)_newNoRecipientsAlert;	// IMP=0x00000001000f7898
- (id)_newEmptyMessageAlert;	// IMP=0x00000001000f763f
- (id)_newPendingAttachmentAlert;	// IMP=0x00000001000f74ac
- (BOOL)_isFullyLoaded;	// IMP=0x00000001000f73e3
- (void)sendMessageAfterChecking:(id)arg1;	// IMP=0x00000001000f571a
- (void)reportDeliveryFailure:(id)arg1;	// IMP=0x00000001000f5665
- (void)send:(id)arg1;	// IMP=0x00000001000f534d
@property(readonly, nonatomic) BOOL sendButtonShouldBeEnabled;
- (BOOL)validateMenuItem:(id)arg1;	// IMP=0x00000001000f4c0e
- (id)_firstSelectedAttachmentView;	// IMP=0x00000001000f4b45
- (id)sharingService:(id)arg1 sourceWindowForShareItems:(id)arg2 sharingContentScope:(long long *)arg3;	// IMP=0x00000001000f49ec
- (id)sharingService:(id)arg1 transitionImageForShareItem:(id)arg2 contentRect:(struct CGRect *)arg3;	// IMP=0x00000001000f4920
- (struct CGRect)sharingService:(id)arg1 sourceFrameOnScreenForShareItem:(id)arg2;	// IMP=0x00000001000f4809
- (void)_replaceSelectionWithMarkupString:(id)arg1;	// IMP=0x00000001000f4741
- (void)sharingService:(id)arg1 didShareItems:(id)arg2;	// IMP=0x00000001000f44e8
- (void)_updateIncudeExcludeAttachmentsButtonImage;	// IMP=0x00000001000f4398
- (id)touchBar:(id)arg1 makeItemForIdentifier:(id)arg2;	// IMP=0x00000001000f3f1b
- (void)_validateTouchBarItems;	// IMP=0x00000001000f3b0d
- (void)_confirmSending:(id)arg1;	// IMP=0x00000001000f3ab8
- (void)_hideConfirmSendingTouchBar:(id)arg1;	// IMP=0x00000001000f3a50
- (void)_showConfirmSendingTouchBar:(id)arg1;	// IMP=0x00000001000f389f
- (id)_confirmSendingTouchBar;	// IMP=0x00000001000f32c9
- (id)_standardTouchBar;	// IMP=0x00000001000f313e
- (id)makeTouchBar;	// IMP=0x00000001000f3106
- (void)editVisibleHeaders:(id)arg1;	// IMP=0x00000001000f3100
- (BOOL)validateToolbarItem:(id)arg1;	// IMP=0x00000001000f2fea
- (void)updateSendButtonStateInToolbar;	// IMP=0x00000001000f2f92
- (void)editSignatures:(id)arg1;	// IMP=0x00000001000f2f1d
- (void)changeSignature:(id)arg1;	// IMP=0x00000001000f2eab
- (BOOL)_currentBodyAppearanceIsDark;	// IMP=0x00000001000f2e27
- (void)toggleLightBackgrounds:(id)arg1;	// IMP=0x00000001000f2d35
- (void)_setComposeViewDrawsBackground:(BOOL)arg1;	// IMP=0x00000001000f2d2c
- (id)shareItemsForSelection;	// IMP=0x00000001000f2c63
- (void)invokeExtensionService:(id)arg1;	// IMP=0x00000001000f2b30
- (BOOL)validateUserInterfaceItem:(id)arg1;	// IMP=0x00000001000f24fb
- (id)messageBodyFromSettings:(id)arg1;	// IMP=0x00000001000f1f30
- (void)prepareContent;	// IMP=0x00000001000f1ce6
- (void)_setupGrammarChecking;	// IMP=0x00000001000f1c14
- (void)_setupSpellChecking;	// IMP=0x00000001000f1b16
- (id)missingCertificatesMessageForRecipients:(id)arg1 uponDelivery:(BOOL)arg2;	// IMP=0x00000001000f18dd
- (void)continueLoadingInitialContent:(id)arg1;	// IMP=0x00000001000f1797
- (void)_updateComposeWebViewPreferencesForRichText:(BOOL)arg1;	// IMP=0x00000001000f16cf
- (void)_finishLoadingEditor;	// IMP=0x00000001000f134e
- (void)_loadHTMLStringIntoWebView:(id)arg1 baseURL:(id)arg2;	// IMP=0x00000001000f1286
- (void)_loadHTMLDataIntoWebView:(id)arg1;	// IMP=0x00000001000f11be
- (void)_loadInitialDocumentIntoWebView;	// IMP=0x00000001000f0e70
- (id)_finishLoadingEditorOperation;	// IMP=0x00000001000f0e08
- (id)_loadInitialDocumentOperation;	// IMP=0x00000001000f0d3f
- (id)_prepareContentOperation;	// IMP=0x00000001000f0c30
- (BOOL)_loadContent;	// IMP=0x00000001000f078d
- (void)_hideImageStatus;	// IMP=0x00000001000f0724
- (void)messageSizeDidChange:(id)arg1;	// IMP=0x00000001000f0712
- (void)_saveImageSizeToDefaults;	// IMP=0x00000001000f0673
- (void)imageSizePopupChanged:(id)arg1;	// IMP=0x00000001000f059a
- (id)_maxImageSizeAsString;	// IMP=0x00000001000f051a
@property(readonly, nonatomic) BOOL hasPendingAttachmentReads;
- (void)_setImageSizePopupToSize:(id)arg1;	// IMP=0x00000001000f0251
- (void)_showImageStatus;	// IMP=0x00000001000f016a
- (void)_updateImageSizePopup;	// IMP=0x00000001000efe7b
- (unsigned long long)_attachmentsContainConvertibleImage:(id)arg1 convertibles:(id)arg2;	// IMP=0x00000001000efc5a
- (BOOL)_convertImageAttachments:(id)arg1;	// IMP=0x00000001000efa8c
- (id)mailAttachmentsAdded:(id)arg1;	// IMP=0x00000001000ef528
- (void)_attachmentDidFinishReading;	// IMP=0x00000001000ef3c1
- (void)mailAttachmentsDeleted;	// IMP=0x00000001000ef36b
- (void)_mailAttachmentsDeleted;	// IMP=0x00000001000ef2b7
@property(readonly, nonatomic) unsigned long long encryptionOverhead;
- (unsigned long long)_signatureOverhead;	// IMP=0x00000001000ef257
- (id)_textLengthEstimate;	// IMP=0x00000001000ef24e
- (BOOL)_isConvertingImages;	// IMP=0x00000001000ef0f3
- (void)webViewDidChange:(id)arg1;	// IMP=0x00000001000ef094
- (void)updateAttachmentStatus;	// IMP=0x00000001000eed13
- (void)attachFilesAtEnd:(id)arg1;	// IMP=0x00000001000eec6b
- (void)alwaysAttachFilesAtEnd:(id)arg1;	// IMP=0x00000001000eec59
- (void)_setSendWindowsFriendlyAttachments:(BOOL)arg1;	// IMP=0x00000001000eebeb
- (void)sendWindowsFriendlyAttachments:(id)arg1;	// IMP=0x00000001000eebb2
- (void)insertFile:(id)arg1;	// IMP=0x00000001000ee66f
@property(readonly, nonatomic) EditableWebMessageDocument *webMessageDocument;
- (void)_hideStatusBar;	// IMP=0x00000001000ee561
- (void)_showStatusBar;	// IMP=0x00000001000ee4d4
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x00000001000ee3cd
- (long long)type;	// IMP=0x00000001000ee389
@property(retain, nonatomic) ComposeBackEnd *backEnd;
- (void)_diagnosticsNotificationReceived:(id)arg1;	// IMP=0x00000001000ee170
- (void)viewDidDisappear;	// IMP=0x00000001000ee116
- (void)_updateViewAppearance;	// IMP=0x00000001000edf7a
- (void)_setUpWebMessageController;	// IMP=0x00000001000edeb2
- (void)viewDidLoad;	// IMP=0x00000001000edcfa
- (void)loadWithContext:(id)arg1;	// IMP=0x00000001000edbd7
- (void)showWithContext:(id)arg1;	// IMP=0x00000001000eda70
@property(retain) id <ComposeContext> representedObject;
- (void)dealloc;	// IMP=0x00000001000ed5dd
- (void)_composeViewControllerCommonInit;	// IMP=0x00000001000ed510
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;	// IMP=0x00000001000ed49f
- (id)initWithCoder:(id)arg1;	// IMP=0x00000001000ed458

// Remaining properties
@property(readonly) BOOL allowsMultipleSelection;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, copy, nonatomic) NSString *displayName;
@property(readonly) struct _NSRange firstSelectedRange;
@property(readonly) unsigned long long hash;
@property(readonly, getter=isSelectable) BOOL selectable;
@property(copy) NSArray *selectedRanges;
@property(readonly) NSString *string;
@property(readonly) Class superclass;
@property(readonly, copy) NSArray *visibleCharacterRanges;

@end

