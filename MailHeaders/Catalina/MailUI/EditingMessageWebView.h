//
//     Generated by class-dump 3.5b1 (64 bit) (Debug version compiled Dec  3 2019 19:59:57).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "TilingWebView.h"

#import "NSFilePresenter-Protocol.h"
#import "NSInspectorBarClient-Protocol.h"
#import "NSTextInputClient-Protocol.h"

@class DOMHTMLAnchorElement, DOMHTMLElement, DOMNode, NSArray, NSOperationQueue, NSSet, NSString, NSURL, NSWindow;
@protocol EditingMessageWebViewDelegate;

@interface EditingMessageWebView : TilingWebView <NSFilePresenter, NSInspectorBarClient, NSTextInputClient>
{
    BOOL _delegateRespondsToCanInsertFromPasteboard;	// 120 = 0x78
    DOMNode *_cursorPositionNode;	// 128 = 0x80
    NSOperationQueue *_filePromiseOperationQueue;	// 136 = 0x88
    unsigned long long _fileCount;	// 144 = 0x90
}

+ (id)insertablePasteboardTypes;	// IMP=0x000000010004e869
+ (void)addEditingHistoryScriptsToGroupIfNecessary;	// IMP=0x000000010013dff9
@property(nonatomic) unsigned long long fileCount; // @synthesize fileCount=_fileCount;
@property(readonly, nonatomic) NSOperationQueue *filePromiseOperationQueue; // @synthesize filePromiseOperationQueue=_filePromiseOperationQueue;
@property(nonatomic) BOOL delegateRespondsToCanInsertFromPasteboard; // @synthesize delegateRespondsToCanInsertFromPasteboard=_delegateRespondsToCanInsertFromPasteboard;
@property(retain, nonatomic) DOMNode *cursorPositionNode; // @synthesize cursorPositionNode=_cursorPositionNode;
// - (void).cxx_destruct;	// IMP=0x000000010014e09c
- (unsigned long long)characterIndexForPoint:(struct CGPoint)arg1;	// IMP=0x000000010014dfc3
- (struct CGRect)firstRectForCharacterRange:(struct _NSRange)arg1 actualRange:(struct _NSRange *)arg2;	// IMP=0x000000010014df3c
- (id)validAttributesForMarkedText;	// IMP=0x000000010005e78c
- (id)attributedSubstringForProposedRange:(struct _NSRange)arg1 actualRange:(struct _NSRange *)arg2;	// IMP=0x000000010014deb0
- (BOOL)hasMarkedText;	// IMP=0x000000010014de6b
- (struct _NSRange)markedRange;	// IMP=0x000000010014de18
- (struct _NSRange)selectedRange;	// IMP=0x000000010014ddc5
- (void)unmarkText;	// IMP=0x000000010014dd88
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2 replacementRange:(struct _NSRange)arg3;	// IMP=0x000000010014dc34
- (void)doCommandBySelector:(SEL)arg1;	// IMP=0x000000010014dab5
- (void)insertText:(id)arg1 replacementRange:(struct _NSRange)arg2;	// IMP=0x000000010014d982
- (id)textInput;	// IMP=0x000000010005e7dc
@property(readonly) NSArray *inspectorBarItemIdentifiers;
- (BOOL)validateUserInterfaceItem:(id)arg1 fallThrough:(char *)arg2;	// IMP=0x000000010014d743
- (BOOL)validateMenuItem:(id)arg1 fallThrough:(char *)arg2;	// IMP=0x000000010014d4f2
@property(readonly, nonatomic) BOOL selectionIsInEmptyListItem;
@property(readonly, nonatomic) BOOL selectionIsInList;
- (BOOL)selectionIsInListTypes:(id)arg1;	// IMP=0x000000010014d2f7
- (BOOL)selectionIsInListType:(id)arg1;	// IMP=0x000000010014d246
- (void)increaseListNestingLevel:(id)arg1;	// IMP=0x000000010014d19e
- (void)insertListWithNumbers:(BOOL)arg1 undoTitle:(id)arg2;	// IMP=0x000000010014ce43
- (void)decreaseListNestingLevel:(id)arg1;	// IMP=0x000000010014cd81
- (void)convertToBulletedList:(id)arg1;	// IMP=0x000000010014cd24
- (void)convertToNumberedList:(id)arg1;	// IMP=0x000000010014ccc7
- (void)convertListFromType:(id)arg1 toType:(id)arg2 undoTitle:(id)arg3;	// IMP=0x000000010014c9ad
- (void)layoutResizingAttachmentViews;	// IMP=0x000000010014c8ef
- (void)changeDocumentBackgroundColorToColor:(id)arg1;	// IMP=0x000000010014c470
- (void)makeFontSmaller:(id)arg1;	// IMP=0x000000010014c3fa
- (void)makeFontBigger:(id)arg1;	// IMP=0x000000010014c384
- (void)_removeFragmentBlockQuote:(id)arg1;	// IMP=0x000000010014c273
- (void)_removeBlockQuoteFromTree:(id)arg1;	// IMP=0x000000010014bfde
- (void)_splitUpBlockQuotesOverlappingEndOfRange:(id)arg1;	// IMP=0x000000010014bbc5
- (void)_splitUpBlockQuotesOverlappingStartOfRange:(id)arg1;	// IMP=0x000000010014b86a
- (void)changeQuoteLevel:(id)arg1;	// IMP=0x000000010014aabb
- (BOOL)_removeAllQuotingFromTree:(id)arg1;	// IMP=0x000000010014a901
- (void)changeIndentation:(long long)arg1;	// IMP=0x000000010014a7fa
- (void)_changeIndentationIfAllowed:(long long)arg1;	// IMP=0x000000010014a77d
- (void)decreaseIndentation:(id)arg1;	// IMP=0x000000010014a764
- (void)increaseIndentation:(id)arg1;	// IMP=0x000000010014a74d
- (void)addHorizontalRule:(id)arg1;	// IMP=0x000000010014a687
- (void)removeLink:(id)arg1;	// IMP=0x000000010014a64a
- (void)editLink:(id)arg1;	// IMP=0x000000010014a60d
- (BOOL)becomeFirstResponder;	// IMP=0x000000010005509a
- (void)pasteWithCurrentStyle:(id)arg1;	// IMP=0x000000010014a531
- (void)pasteAsQuotation:(id)arg1;	// IMP=0x000000010014a415
- (void)paste:(id)arg1;	// IMP=0x000000010014a2b9
- (void)redo:(id)arg1;	// IMP=0x000000010014a27c
- (void)undo:(id)arg1;	// IMP=0x000000010014a23f
- (id)beginDraggingSessionWithItems:(id)arg1 event:(id)arg2 source:(id)arg3;	// IMP=0x000000010014a124
- (BOOL)wantsPeriodicDraggingUpdates;	// IMP=0x000000010014a119
- (void)concludeDragOperation:(id)arg1;	// IMP=0x0000000100149fda
- (BOOL)performDragOperation:(id)arg1;	// IMP=0x00000001001495de
- (BOOL)prepareForDragOperation:(id)arg1;	// IMP=0x00000001001494a9
- (void)draggingExited:(id)arg1;	// IMP=0x000000010014936a
- (unsigned long long)draggingUpdated:(id)arg1;	// IMP=0x00000001001492e9
- (unsigned long long)draggingEntered:(id)arg1;	// IMP=0x0000000100148ff7
- (void)saveMessageToDrafts:(id)arg1;	// IMP=0x0000000100148f77
- (void)registerForDraggedTypes:(id)arg1;	// IMP=0x000000010004e77d
- (void)insertNode:(id)arg1 atRange:(id)arg2;	// IMP=0x0000000100148ed5
- (void)saveSelectionForUndo;	// IMP=0x0000000100148d9c
- (void)setSelectionStart:(id)arg1 offset:(int)arg2 end:(id)arg3 offset:(int)arg4 affinity:(unsigned long long)arg5;	// IMP=0x0000000100148cb1
- (id)selectedContainerWithNameInArray:(id)arg1;	// IMP=0x0000000100148c10
@property(readonly, copy, nonatomic) DOMHTMLAnchorElement *selectedAnchor;
@property(readonly, copy, nonatomic) DOMNode *temporaryStartingSelectionMarker;
@property(readonly, copy, nonatomic) DOMNode *temporaryEndingSelectionMarker;
- (void)deleteTemporarySelectionMarkersFromDocument:(id)arg1;	// IMP=0x0000000100148423
- (void)_restoreSelectionFromTemporaryMarkers:(BOOL)arg1;	// IMP=0x0000000100148046
- (void)restoreSelectionFromTemporaryMarkers;	// IMP=0x0000000100148032
- (void)insertTemporarySelectionMarkersForRange:(id)arg1;	// IMP=0x0000000100147df0
- (BOOL)isAutomaticLinkDetectionEnabled;	// IMP=0x000000010005fee9
- (BOOL)_removeAllFormatting:(long long)arg1;	// IMP=0x00000001001479b3
- (void)removeAllFormatting;	// IMP=0x0000000100147907
- (void)removeStyle:(id)arg1;	// IMP=0x000000010014700f
- (BOOL)resetMainDocumentBodyAttributes;	// IMP=0x0000000100146abc
- (BOOL)removeNonBodyChildrenAndAttributesFromMainDocumentElement;	// IMP=0x000000010014660a
- (BOOL)removeFormattingFromTree:(id)arg1 forDocument:(id)arg2 hasDocumentContext:(BOOL)arg3 imageStrippingMode:(long long)arg4;	// IMP=0x00000001001452a5
- (BOOL)removeHeadFromDocument:(id)arg1;	// IMP=0x000000010014524e
- (void)setMainDocumentURI:(id)arg1;	// IMP=0x00000001001450c9
- (void)setStyleProperty:(id)arg1 value:(id)arg2 priority:(id)arg3 ofElement:(id)arg4;	// IMP=0x0000000100144eec
- (void)setValue:(id)arg1 forAttribute:(id)arg2 ofElement:(id)arg3;	// IMP=0x0000000100144d9c
- (void)_insertNode:(id)arg1 parent:(id)arg2 offset:(unsigned int)arg3;	// IMP=0x0000000100144b6f
- (void)insertNode:(id)arg1 parent:(id)arg2 nextSibling:(id)arg3;	// IMP=0x0000000100057bd8
- (void)replaceNode:(id)arg1 oldNode:(id)arg2;	// IMP=0x0000000100144ac7
- (void)deleteRange:(id)arg1;	// IMP=0x0000000100144395
- (void)deleteNode:(id)arg1;	// IMP=0x0000000100144289
- (BOOL)validateUserInterfaceItem:(id)arg1;	// IMP=0x0000000100143c8d
- (BOOL)selectionCouldBeMadeIntoALink;	// IMP=0x0000000100143bc0
@property(readonly, nonatomic) BOOL isSelectionInContentElement;
@property(readonly, nonatomic) DOMHTMLElement *contentElement;
- (BOOL)_replaceSelectionWithFragment:(id)arg1 attachments:(id)arg2 pasteboard:(id)arg3 types:(id)arg4 action:(long long)arg5 options:(unsigned long long)arg6 isPlainText:(BOOL)arg7;	// IMP=0x0000000100143001
- (BOOL)insertImageURL:(id)arg1 forAction:(long long)arg2;	// IMP=0x0000000100142c1e
- (BOOL)replaceSelectionUsingContext:(id)arg1;	// IMP=0x0000000100142a9c
- (id)_createAttachmentsForResources:(id)arg1 inFragment:(id)arg2;	// IMP=0x00000001001427e6
- (void)_clearExistingHTML;	// IMP=0x000000010014264c
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2 resourcesToAttach:(id)arg3;	// IMP=0x00000001001423f0
@property(readonly, retain) NSOperationQueue *presentedItemOperationQueue;
@property(readonly, copy) NSURL *presentedItemURL;
- (BOOL)_replaceSelectionWithPasteboardContentsDraggingInfo:(id)arg1 pasteboard:(id)arg2 pasteboardType:(id)arg3 action:(long long)arg4 options:(unsigned long long)arg5;	// IMP=0x000000010013f7cc
- (BOOL)_replaceSelectionWithContentsOfWebpage:(id)arg1;	// IMP=0x000000010013ecf3
- (BOOL)replaceSelectionWithPasteboardContentsDraggingInfo:(id)arg1 pasteboardType:(id)arg2 action:(long long)arg3 options:(unsigned long long)arg4;	// IMP=0x000000010013ec51
- (BOOL)replaceSelectionWithPasteboardContentsPasteboard:(id)arg1 pasteboardType:(id)arg2 action:(long long)arg3 options:(unsigned long long)arg4;	// IMP=0x000000010013ebed
- (unsigned long long)pastedContactCounter;	// IMP=0x000000010013ebd5
- (unsigned long long)pastedGraphicCounter;	// IMP=0x000000010013ebbe
@property(retain, nonatomic) id <EditingMessageWebViewDelegate> editingDelegate;
- (id)mailPreferredPboardTypeFromTypes:(id)arg1 pasteboard:(id)arg2 isForDrag:(BOOL)arg3 preferHTML:(BOOL)arg4;	// IMP=0x000000010013e3d7
- (BOOL)isActive;	// IMP=0x000000010013e3a2
- (BOOL)maintainsInactiveSelection;	// IMP=0x000000010005dccb
- (void)viewDidChangeEffectiveAppearance;	// IMP=0x000000010013e328
- (void)updateLayer;	// IMP=0x000000010013e222
- (void)_editingMessageWebViewCommonInit;	// IMP=0x000000010013df7e
- (id)initWithCoder:(id)arg1;	// IMP=0x000000010013df37
- (id)initWithFrame:(struct CGRect)arg1 frameName:(id)arg2 groupName:(id)arg3;	// IMP=0x000000010013deb0

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) NSSet *observedPresentedItemUbiquityAttributes;
@property(readonly, copy) NSURL *primaryPresentedItemURL;
@property(readonly) Class superclass;
@property(readonly) NSWindow *window;

@end

